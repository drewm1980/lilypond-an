@c -*- coding: utf-8; mode: texinfo; documentlanguage: de -*-

@ignore
    Translation of GIT committish: 4582b7b24d22b2041bfcba49e716a714effcce92

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore

@c \version "2.13.4"
@c Translators: Till Rettig, Reinhold Kainhofer
@c Translation checkers: Hajo Bäß

@node Einleitung
@chapter Einleitung
@translationof Introduction

Dieses Kapitel stellt dem Leser das grundlegende Arbeiten mit LilyPond
vor.

@menu
* Eine Quelldatei übersetzen::
* Einfache Notation::
* Arbeiten an Eingabe-Dateien::
* Wie soll das Handbuch gelesen werden::
@end menu


@node Eine Quelldatei übersetzen
@subsection Eine Quelldatei übersetzen
@translationof Compiling a file

FIXME: Text hier

@menu
* Noten eingeben::              
* MacOS X::                     
* Windows::                     
* Kommandozeile::                
@end menu

@node Noten eingeben
@subsection Noten eingeben
@translationof Entering input

@cindex Kompilieren
@cindex erstes Beispiel
@cindex Beispiel, erstes
@cindex Übersetzen von Quelltext
@cindex Groß- und Kleinschreibung
@cindex Quelltext, übersetzen
@cindex Großbuchstaben
@cindex Kleinbuchstaben

@qq{Kompilation} ist der Begriff, der benutzt wird, um eine
Lilypond-Eingabedatei mit dem Programm LilyPond in eine
Notenausgabe umzuwandeln, die ausgedruckt werden kann. 
Zusätzlich besteht die Option, eine MIDI-Datei zu produzieren,
die abgespielt werden kann. Das erste Beispiel zeigt, wie
solch eine einfache Eingabedatei ausschauen kann.

Um Notensatz zu erstellen, muss die Notation in der Eingabedatei
beschrieben werden. Wenn man z.@w{}B. schreibt:

@example
@{
  c' e' g' e'
@}
@end example

@noindent
so erhält man folgendes Resultat:

@c  in this case we don't want verbatim
@lilypond[quote]
{
  c' e' g' e'
}
@end lilypond

@warning{In jeder LilyPond-Datei müssen
@strong{@{ geschweifte Klammern @}} um die Noten
oder Gesangstext
gesetzt werden. Vor und hinter den Klammern sollten
Leerzeichen eingegeben werden, damit keine Unklarheiten
in Verbindung mit den eigentlichen Notensymbolen entstehen.
An Anfang und Ende der Zeile können diese Leerzeichen auch
weggelassen werden. Es kann sein, dass in diesem Handbuch
die Klammern in manchen Beispielen fehlen, aber man sollte
immer daran denken, sie in den eigenen Dateien zu benutzen!
Mehr Informationen zu der Darstellung der Beispiele in diesem
Handbuch gibt der Abschnitt @ref{Wie soll das Handbuch gelesen werden}.}

Zusätzlich unterscheidet LilyPond @strong{Groß- und Kleinschreibung}.
@w{@code{ @{ c d e @}}} ist zulässiger Code,
@w{@code{ @{ C D E @}}} dagegen resultiert in einer Fehlermeldung.

@smallspace

@subheading Ansicht des Ergebnisses

@cindex PDF-Datei
@cindex Noten anzeigen
@cindex Anzeigen der Noten
@cindex Ansicht von Noten
@cindex Editoren
@cindex Texteditoren
@cindex LilyPond unter MacOS X
@cindex Windows, LilyPond starten
@cindex MacOS X, LilyPond starten
@cindex Unix, LilyPond starten
@cindex Starten von LilyPond

Das Erstellen der Notenausgabe hängt davon ab, welches Betriebssystem
und welche Programme Sie benutzen.

@itemize

@item
@ref{MacOS X, @sourceimage{logo-macosx,,,}}
@ref{MacOS X, MacOS X} (graphisch)

@item
@ref{Windows, @sourceimage{logo-windows,,,}}
@ref{Windows, Microsoft Windows} (graphisch)

@item
@ref{Kommandozeile, @sourceimage{logo-linux,,,}
@sourceimage{logo-freebsd,,,}
@sourceimage{logo-macosx,,,}
@sourceimage{logo-windows,,,}
}
@ref{Kommandozeile, Alle Betriebssysteme} (Kommandozeile)

@end itemize

Beachten Sie, dass es eine Reihe an Texteditoren mit besserer 
Unterstützung für LilyPond gibt. Mehr dazu im Abschnitt
@rprogram{Unterstützung von Texteditoren}.
@c FIXME: link to @rweb{Alternate input}

@warning{Das erste Mal, wenn Sie LilyPond benutzen, kann es eine 
Minute oder länger dauern, weil das Programm zuerst alle Schriftarten,
die auf dem System zur Verfügung stehen, untersucht. Aber nach 
diesem ersten Mal läuft LilyPond sehr viel schneller.}

@node MacOS X
@subsection MacOS X
@translationof MacOS X

@warning{Diese Anweisungen gehen davon aus, dass Sie den installierten
LilyPad-Editor benutzen.  Wenn Sie eins der Programme benutzen, die in @rweb{Alternate input} beschrieben sind, schauen
Sie bitte in der Dokumentation nach, wenn Sie Probleme damit haben,
eine Datei zu kompilieren.}


Wenn Sie das @command{LilyPond.app}-Symbol doppelt klicken, öffnet
sich eine Beispiel-Datei. Speichern Sie sie etwa als
 @file{test.ly} auf dem Desktop und übersetzen Sie sie
mit dem Menü-Befehl  @w{@qq{Compile > Typeset File}}.
Die PDF-Datei mit dem fertigen Notensatz wird automatisch
geöffnet.

Das nächste Mal, wenn Sie LilyPond benutzen, sollten Sie
 @qq{New} oder @qq{Open} wählen.  Sie müssen die Datei
speichern, bevor Sie sie übersetzen können. Wenn es Fehler gibt,
lesen Sie die Meldungen im Log-Fenster.

@node Windows
@subsection Windows
@translationof Windows

@warning{Diese Anweisungen gehen davon aus, dass Sie den installierten
LilyPad-Editor benutzen.  Wenn Sie eins der Programme benutzen, die in @rweb{Alternate input} beschrieben sind, schauen
Sie bitte in der Dokumentation nach, wenn Sie Probleme damit haben,
eine Datei zu kompilieren.}

Wenn sie auf das LilyPond-Symbol auf dem Desktop doppelklicken,
öffnet sich ein einfacher Texteditor mit einer Beispieldatei. Speichern
Sie sie z. B. als @file{test.ly} auf dem Desktop und klicken Sie dann
doppelt auf die Datei, um die Übersetzung zu beginnen (das Dateisymbol 
ist eine Note). Nach einigen
Sekunden wird eine Datei @file{test.pdf} auf dem Desktop erscheinen.
Mit einem Doppelklick kann das fertige Notenbild in 
der PDF-Datei angezeigt werden.
Eine Alternative ist es, die @file{test.ly}-Datei mit der Maus auf das
LilyPond-Symbol zu ziehen.

Um eine schon existierende Datei zu bearbeiten, klicken Sie mit der rechten 
Maustaste auf die Datei und wählen Sie @qq{Edit source}. Um eine leere 
Datei zu erhalten, mit der Sie ein neues Stück beginnen können, öffnen Sie 
den Texteditor durch Doppelklick auf das LilyPond-Symbol und benutzen Sie 
@qq{New} im @qq{File}-Menü, oder klicken Sie mit der rechten
Maustaste auf den Desktop und wählen Sie @qq{Neu...Textdatei},
ändern Sie dann den Namen so wie Sie möchten und ändern Sie 
die Dateiendung in @code{.ly}. Doppelklicken Sie auf die Datei,
um Ihren LilyPond-Eingabecode einzugeben.

Mit dem Doppelklick wird nicht nur die PDF-Datei erstellt, sondern
auch eine @file{.log}-Datei. Hier wird gespeichert, was LilyPond aus
der Quelldatei gelesen hat. Sollten Fehler auftreten, hilft oft ein 
Blick in diese Datei.

@node Kommandozeile
@subsection Kommandozeile
@translationof Command-line

@warning{Diese Anweisungen gehen davon aus, dass Sie den installierten
LilyPad-Editor benutzen.  Wenn Sie eins der Programme benutzen, die in @rweb{Alternate input} beschrieben sind, schauen
Sie bitte in der Dokumentation nach, wenn Sie Probleme damit haben,
eine Datei zu kompilieren.}


Erstellen Sie eine Text-Datei mit dem Namen @file{test.ly} und 
geben Sie folgenden Text ein:

@example
@{
  c' e' g' e'
@}
@end example

Um die Datei zu bearbeiten, geben sie an der Konsole

@example
lilypond test.ly
@end example

@noindent
ein.
Sie werden ungefähr folgende Meldungen sehen:


@example
lilypond test.ly
GNU LilyPond @version{}
»test.ly« wird verarbeitet
Analysieren...
Interpretation der Musik...
Vorverarbeitung der grafischen Elemente...
Ideale Seitenanzahl wird gefunden...
Musik wird auf eine Seite angepasst...
Systeme erstellen...
Layout nach »test.ps« ausgeben...
Konvertierung nach »test.pdf«...
@end example

Als Ergebnis erhalten Sie ein @file{test.pdf}, das Sie mit den
Standardprogrammen Ihres Betriebssystemes anschauen können.



@node How to write input files
@section How to write input files

FIXME: Text hier

@menu
* Einfache Notation::             
* Arbeiten an Eingabe-Dateien::      
@end menu



@node Einfache Notation
@subsection Einfache Notation
@translationof Simple notation

@cindex einfache Notation
@cindex Notation, einfach

LilyPond fügt einige Bestandteile des Notenbildes automatisch hinzu. Im
nächsten Beispiel sind nur vier Tonhöhen angegeben, aber LilyPond setzt
trotzdem einen Schlüssel, eine Taktangabe und Notendauern.

@lilypond[verbatim,quote]
{
  c' e' g' e'
}
@end lilypond

@noindent
Diese Einstellungen können verändert werden, aber in den meisten Fällen
sind die automatischen Werte durchaus brauchbar.

@subheading Tonhöhen

@cindex Tonhöhen
@cindex relativer Modus
@cindex Apostroph
@cindex Komma
@cindex Versetzungszeichen und relativer Modus
@cindex relativer Modus und Versetzungszeichen

@funindex \relative
@funindex relative
@funindex '
@funindex ,


Glossar: @rglos{pitch}, @rglos{interval},
@rglos{scale}, @rglos{middle C}, @rglos{octave},
@rglos{accidental}.

@c Addition for German users about pitch naming conventions
Die Tonhöhen werden mit Kleinbuchstaben eingegeben, die den Notennamen
entsprechen. Es ist jedoch wichtig zu wissen, dass LilyPond in seiner
Standardeinstellung die englischen Notennamen verwendet. Bis auf eine
Ausnahme entsprechen sie den deutschen, deshalb wird die Voreinstellung
von LilyPond für diese Übung beibehalten. Die @emph{Ausnahme} ist das h -- in 
LilyPond muss man anstelle dessen b schreiben! Das deutsche b dagegen
wird als bes notiert, ein his dagegen würde bis geschrieben. Siehe auch
@ruser{Versetzungszeichen} und @ruser{Notenbezeichnungen in anderen Sprachen}, hier
wird beschrieben,
wie sich die deutschen Notennamen benutzen lassen.
@c end addition

Am einfachsten können Noten im @code{\relative}-Modus
eingegeben werden. In diesem Modus wird die Oktave der Note automatisch
gewählt, indem angenommen wird, dass die folgende Note immer so nah 
wie möglich in Bezug auf die vorhergehende gesetzt wird, d. h. sie 
wird höchstens drei Notenzeilen höher oder tiefer als die vorhergehende 
Note gesetzt. Fangen
wir unser erstes Notationsbeispiel mit einer @notation{scale} an, wo also
die nächste Note immer nur eine Notenlinie über der vorherigen steht.

@c KEEP LY
@lilypond[verbatim,quote]
% Beginnpunkt auf das mittlere C setzen
\relative c' {
  c d e f
  g a b c
}
@end lilypond

Die erste Note ist ein @notation{eingestrichenes C}. Jede folgende Note
befindet sich so nah wie möglich bei der vorherigen -- das erste 
@q{C} ist also das nächste C vom
eingestrichenen C aus gerechnet. Darauf folgt das nächstmögliche
D in Bezug auf die vorhergehende Note. Mit diesen Regeln können
auch Melodien mit größeren Intervallen im @code{\relative}-Modus
gebildet werden:

@lilypond[verbatim,quote]
\relative c' {
  d f a g
  c b f d
}
@end lilypond

@noindent
Es ist nicht notwendig, dass die erste Note der Melodie mit der 
Note beginnt, die die erste Tonhöhe angibt.
Die erste Note (das @q{D}) des vorigen Beispiels ist das nächste D 
vom eingestrichenen C aus gerechnet.

Indem man Apostrophe @code{'} (Taste Shift+#) oder Kommata @code{,} 
zu dem @w{@code{\relative c' @{}} hinzufügt oder entfernt, kann die 
Oktave der ersten Tonhöhe verändert werden:

@c KEEP LY
@lilypond[verbatim,quote]
% zweigestrichenes C
\relative c'' {
  e c a c
}
@end lilypond

Der relative Modus kann zunächst verwirrend erscheinen, aber es ist die 
einfachste Art, die meisten Melodien zu notieren. Schauen wir uns an, 
wie diese relative Berechnung in der Praxis funktioniert. Wenn wir mit 
einem H beginnen (@code{b} in der LilyPond-Syntax), welches sich auf der 
mittleren Linie im Violinschlüssel befindet, können wir C, D und E 
aufwärts notieren, und A, G und F unter dem H. Wenn also die Note, die 
auf das H folgt, ein C, D oder E ist, setzt LilyPond es oberhalb des 
Hs, wenn es ein A, G oder F ist, wird es darunter gesetzt.

@c KEEP LY
@lilypond[verbatim,quote]
\relative c'' {
  b c  % c ist 1 Zeile aufwärts, also c über dem b
  b d  % d ist 2 Zeilen aufwärts, oder 5 runter, also d über dem b
  b e  % e ist 3 aufwärts oder 4 runter, also e über dem b
  b a  % a ist 6 aufwärts oder 1 runter, also a unter dem b
  b g  % g ist 5 aufwärts oder 2 runter, also g unter dem b
  b f  % f ist 4 aufwärts oder 3 runter, also f unter dem b
}
@end lilypond

Die gleiche Berechnung findet auch statt, wenn eine der Noten erhöht 
oder erniedrigt ist. @notation{Versetzungszeichen} werden 
@strong{vollständig ignoriert} bei der Berechnung. Genau die 
gleiche Berechnung wird analog von jeder folgenden Tonhöhe aus 
für die nächste Tonhöhe neu ausgeführt.

Um Intervalle zu notieren, die größer als drei Notenzeilen sind, kann man die Oktave verändern. Mit einem Apostroph @code{'} (Taste Shift+#)
direkt hinter dem Notennamen wird die Oktave um eins erhöht, mit einem Komma @code{,} um eins erniedrigt.

@lilypond[verbatim,quote]
\relative c'' {
  a a, c' f,
  g g'' a,, f'
}
@end lilypond

@noindent
Um eine Notenhöhe um zwei (oder mehr!) Oktaven zu verändern,
werden sukzessive @code{''} oder @code{,,} benutzt -- es muss
sich dabei wirklich um zwei einzelne Apostrophen und nicht um das
Anführungszeichen @code{"}@tie{} (Taste Shift+2) handeln! Auch
die Anfangsoktave für einen @w{@code{\relative c'}}-Abschnitt kann so
verändert werden.

@subheading Tondauern (Rhythmen)

@cindex Notendauern
@cindex Dauern
@cindex Rhythmus
@cindex Ganze Noten
@cindex Halbe Noten
@cindex Viertelnoten
@cindex punktierte Noten

Glossar: @rglos{beam}, @rglos{duration},
@rglos{whole note}, @rglos{half note}, @rglos{quarter note},
@rglos{dotted note}.

Die @notation{Dauer} einer Note wird durch eine Zahl bezeichnet,
die direkt auf den Notennamen folgend eingegeben wird.
@code{1} für eine @notation{ganze Note}, @code{2} für eine 
@notation{halbe Note}, @code{4} für eine @notation{Viertelnote} 
und so weiter. @notation{Notenhälse} und @notation{Balken} werden
automatisch hinzugefügt.

Wenn keine Dauer bezeichnet wird, wird die der vorhergehenden Note
verwendet. Für die erste Note ist eine Viertel als Standard definiert.

@lilypond[verbatim,quote]
\relative c'' {
  a1
  a2 a4 a8 a
  a16 a a a a32 a a a a64 a a a a a a a a2
}
@end lilypond

Um @notation{punktierte Noten} zu erzeugen, wird einfach ein Punkt 
@code{.} hinter die Notendauer geschrieben. Die Dauer einer 
punktierten Note muss explizit, also inklusive der Nummer, 
angegeben werden.

@lilypond[verbatim,quote]
\relative c'' {
  a a a4. a8
  a8. a16 a a8. a8 a4.
}
@end lilypond


@subheading Pausen

@cindex Pausen
@cindex schreiben von Pausen
@cindex notieren von Pausen

Eine @notation{Pause} wird genauso wie eine Noten eingegeben; ihre
Bezeichnung ist @code{r}@tie{}:

@lilypond[verbatim,quote]
\relative c'' {
  a r r2
  r8 a r4 r4. r8
}
@end lilypond


@subheading Taktangabe

@cindex Taktart

@funindex \time
@funindex time

Glossar: @rglos{time signature}.

Die @notation{Taktart} kann mit dem 
@code{\time}-Befehl definiert werden:

@lilypond[verbatim,quote]
\relative c'' {
  \time 3/4
  a4 a a
  \time 6/8
  a4. a
  \time 4/4
  a4 a a a
}
@end lilypond


@subheading Notenschlüssel

@cindex Schlüssel
@cindex Alt
@cindex Sopran
@cindex Tenor
@cindex Bass

@funindex \clef
@funindex clef

Glossar: @rglos{time signature}.

Der @notation{Notenschlüssel} kann mit dem @code{\clef}-Befehl 
gesetzt werden:

@lilypond[verbatim,quote]
\relative c' {
  \clef treble
  c1
  \clef alto
  c1
  \clef tenor
  c1
  \clef bass
  c1
}
@end lilypond


@subheading Alles zusammen

Hier ist ein kleines Beispiel, dass all diese Definitionen beinhaltet:

@lilypond[verbatim,quote]
\relative c, {
  \time 3/4
  \clef bass
  c2 e8 c' g'2.
  f4 e d c4 c, r4
}
@end lilypond


@seealso
Notationsreferenz: @ruser{Tonhöhen setzen},
@ruser{Rhythmen eingeben}, @ruser{Pausen eingeben},
@ruser{Taktangabe}, @ruser{Notenschlüssel}.


@node Arbeiten an Eingabe-Dateien
@subsection Arbeiten an Eingabe-Dateien
@translationof Working on input files

@cindex geschweifte Klammern
@cindex Klammern, geschweift
@cindex Kommentare
@cindex Zeilenkommentare
@cindex Block-Kommentare
@cindex Groß- und Kleinschreibung
@cindex Ausdrücke
@cindex Großbuchstaben
@cindex Kleinbuchstaben

@funindex { ... }
@funindex %
@funindex %@{ ... %@}


LilyPonds Quelldateien ähneln Dateien in den meisten
Programmiersprachen: Es ist auf Groß- und Kleinschreibung
zu achten und Leerzeichen werden ignoriert. Ausdrücke werden 
mit geschweiften Klammern @{ @} eingeklammert und Kommentare 
mit dem Prozentzeichen @code{%} auskommentiert
oder mit @code{%@{ ... %@}} umgeben.

Wenn das jetzt unverständlich erscheint, sind hier die  Erklärungen:

@itemize

@item
@strong{Groß- und Kleinschreibung:}
Die Bedeutung eines Zeichens verändert sich, je
nachdem, ob es groß (@w{@code{A, B, S, T}}) oder klein
 (@w{@code{a, b, s, t}}) geschrieben wird. Noten müssen
immer klein geschrieben werden,  @w{@code{@{ c d e @}}} funktioniert,
während @w{@code{@{ C D E @}}} einen Fehler produziert.

@item @strong{Leerzeichen:}
Es spielt keine Rolle, wie viele Leerzeichen oder Tabulatoren oder
leere Zeilen sich zwischen den Zeichen der Quelldatei befinden.
@w{@code{@{ c d e @}}} bedeutet das Gleiche wie
@w{@code{@{ c @ @ @ @ @  d e @}}} oder
@example
          @{
c                        d
  e @}
@end example

@noindent
Natürlich ist das letzte Beispiel etwas schwer zu lesen. Eine gute Daumenregel
ist es, Code-Blöcke mit der Tab-Taste oder zwei Leerzeichen einzurücken:
@example
@{
  c d e
@}
@end example

Leerzeichen @emph{sind} jedoch nötig, um viele syntaktische Elemente
voneinander zu trennen.  Leerzeichen können also immer @emph{hinzugefügt}
werden, aber sie dürfen nicht @emph{entfernt} werden.  Da fehlende
Leerzeichen sehr seltsame Fehlermeldungen hervorrrufen können, wird
es nahe gelegt, immer ein Leerzeichen vor und nach jedem syntaktischen
Element, etwa vor und nach geschweiften Kklammern, einzufügen.

@item @strong{Ausdrücke:}
Auch der kleinste Abschnitt an LilyPond-Code muss in
@strong{@{ geschweifte Klammern @}} eingeschlossen werden. Diese
Klammern zeigen LilyPond an, dass es sich um einen zusammengehörenden
musikalischen Ausdruck handelt, genauso wie Klammern @q{()} in der Mathematik.
Die Klammern sollten von jeweils einem Leerzeichen umgeben sein, um
Zweideutigkeiten auszuschließen, es sei denn, sie
befinden sich am Anfang oder Ende einer Zeile.
Ein LilyPond-Befehl gefolgt von einem einfachen Ausdruck
in Klammern (wie etwa @code{\relative @{ @}}) 
wird auch als ein einzelner Musikausdruck gewertet.

@cindex Kommentare
@cindex Zeilenkommentare
@cindex Blockkommentare

@item 
@strong{Kommentare:}
Ein Kommentar ist eine Bemerkung für den menschlichen Leser
einer Quelldatei, es wird bei der Dateianalyse durch das Programm
ignoriert, so dass es also keine Auswirkung auf die Druckausgabe der
Noten hat. Es gibt zwei verschiedene Typen von Kommentaren. Das
Prozentzeichen @q{%} geht einem Zeilen-Kommentar voraus: Alles
nach diesem Zeichen wird in dieser Zeile ignoriert. 
Üblicherweise wird ein Kommentar @emph{über} dem Code gesetzt,
auf den es sich bezieht.

@example
a4 a a a
% Dieser Kommentar bezieht sich auf das H
b2 b
@end example


Ein Block-Kommentar ist ein ganzer Abschnitt mit einem
Kommentar. Alles, was von @code{%@{}
und @code{%@}} umgeben ist, wird ignoriert. Das heißt,
dass sich ein Block-Kommentar nicht ein einem anderen
Blockkommentar befinden kann. Wenn Sie das versuchen sollten,
beendet schon das erste @code{%@}} @emph{beide} 
Block-Kommentare. Das folgende Beispiel zeigt eine
mögliche Anwendung von Kommentaren:

@example
% Noten für twinkle twinkle hier
  c4 c g' g a a g2

%@{
    Diese Zeilen, und die Noten unten werden
    ignoriert, weil sie sich in einem Block-Kommentar
    befinden.

    f f e e d d c2
%@}
@end example

@end itemize



@node How to read the manuals
@section How to read the manuals

FIXME: fluff here

@menu
* Klammern weglassen::             
* Anklickbare Beispiele::          
* Navigation mit der Tastatur::         
* Überblick über die Handbücher::         
@end menu


@node Wie soll das Handbuch gelesen werden
@subsection Wie soll das Handbuch gelesen werden
@translationof How to read the manual

@node Klammern weglassen
@subsection Klammern weglassen
@translationof Omitting braces

@cindex Handbuch, Lesen
@cindex Wie soll das Handbuch gelesen werden
@cindex Lesen des Handbuchs
@cindex Beispiele, klickbar
@cindex klickbare Beispiele
@cindex Vorlagen
@cindex Templates
@cindex Dateien konstruieren, Hinweise
@cindex Konstruieren von Dateien, Hinweise
@cindex Hinweise zur Konstruktion von Dateien

LilyPond-Code muss immer von  @{ @} Zeichen oder einem 
@code{@w{\relative c'' @{ ... @}}} umgeben sein, wie
gezeigt in @ref{Arbeiten an Eingabe-Dateien}.
Im Rest dieses Handbuchs werden die meisten Beispiel allerdings darauf
verzichten. Um sie zu reproduzieren, können Sie den entsprechenden 
Quellcode kopieren und in eine Textdatei einfügen, aber Sie 
@strong{müssen} dabei
@code{@w{\relative c'' @{ @}}} einfügen, wie hier gezeigt:

@example
\relative c'' @{
  ... hier das Beispiel ...
@}
@end example

Warum werden die Klammern hier meist weggelassen?  Die meisten
der Beispiele können in ein längeres Musikstück hineinkopiert
werden, und dann ist es natürlich nicht sinnvoll, wenn auch noch
@code{@w{\relative c'' @{ @}}} dazukommt; ein @code{\relative} darf
nicht innerhalb eines anderen @code{\relative} gesetzt werden,
deshalb wird es hier weggelassen, damit die Beispiele auch innerhalb
eines anderen Kontextes funktionieren.  Wenn bei jedem 
Beispiel @code{@w{\relative c'' @{ @}}} eingesetzt würde,
könnten Sie die kleinen Beispiele der Dokumentation
nicht einfach zu Ihrem eigenen Notentext hinzufügen. 
Die meisten Benutzer wollen 
Noten zu einer schon bestehenden Datei irgendwo in der Mitte
hinzufügen, deshalb wurde der relative Modus für die Beispiele
im Handbuch weggelassen.


@node Anklickbare Beispiele
@subsection Anklickbare Beispiele
@translationof Clickable examples

@warning{Diese Eigenschaft gibt es nur in der HTML-Dokumentation.}

Viele Leute lernen Programme, indem sie einfach herumprobieren. Das
geht auch mit LilyPond. Wenn Sie in der HTML-Version dieses Handbuchs
eine Abbildung in der HTML-Version dieses Handbuches anklicken,
erhalten sie exakt den LilyPond-Code, der
zum Satz der Abbildung benutzt wurde. Versuchen Sie es mit dieser
Abbildung:

@c no verbatim here
@c KEEP LY
@lilypond[quote]
\relative c'' {
  c-\markup { \bold \huge { Hier klicken!  } }
}
@end lilypond

Wenn Sie einfach alles kopieren, was im
 @qq{ly snippet}-Abschnitt steht, und in eine Text-Datei
einfügen, haben Sie schon eine fertige Vorlage für weitere
Experimente. Damit Sie genau das gleiche Erscheinungsbild wie 
bei dem Beispiel selber erreichen, müssen Sie alles kopieren ab der 
Zeile @qq{Start
cut-&-pastable section} bis ganz zum Ende der Datei.


@node Navigation mit der Tastatur
@subsection Navigation mit der Tastatur
@translationof Keyboard navigation

@warning{Diese Funktion gibt es nur für die HTML-Version der Handbücher.}

@c TODO: once this is figured out, insert it here.

Es wird gegenwärtig an dieser Funktion gearbeitet.



@node Überblick über die Handbücher
@subsection Überblick über die Handbücher
@translationof Overview of manuals


Es gibt sehr viele Dokumentation für LilyPond. Neue Benutzer sind
oft verwirrt, welche Teile davon sie lesen sollen, und so kommt
es vor, dass machnmal wichtige Abschnitte nicht gelesen werden.

@warning{Bitte überspringen Sie keine wichtigen Teile der
Dokumentation.  Sonst wird es Ihnen später sehr viel schwerer
fallen, spätere Abschnitte zu verstehen.}

@itemize

@item
@strong{Bevor Sie @emph{irgendetwas} ausprobieren}: Lesen Sie die
Abschnitte @ref{Einleitung} und @ref{Übliche Notation}.  Wenn
Sie auf musikalische Fachbegriffen stoßen, die Sie nicht kennen,
schauen Sie diese im @rglosnamed{Top, Glossar} nach.

@item
@strong{Bevor Sie ein vollständiges Stück notieren}:  Lesen
Sie den Abschnitt @ref{Grundbegriffe} im Handbuch zum Lernen.
Danach können Sie sich die für Ihr Projekt wichtigen Abschnitte
in der
@rusernamed{Top, Notationsreferenz} anschauen.

@item
@strong{Bevor Sie versuchen, die Standardnotation zu verändern}:
Lesen Sie @ref{Die Ausgabe verändern} im Handbuch zum Lernen.

@item
@strong{Bevor Sie sich an ein größeres Projekt machen}: Lesen
Sie den Abschnitt
@rprogram{Suggestions for writing files}
in der Programmbenutzung.

@end itemize

