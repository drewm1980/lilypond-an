@c -*- coding: utf-8; mode: texinfo; -*-
@c This file is part of lilypond-learning.tely
@ignore
    Translation of GIT committish: FILL-IN-HEAD-COMMITTISH

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c \version "2.11.61"

@node Templates
@appendix Templates

This section of the manual contains templates with the LilyPond score
already set up for you.  Just add notes, run LilyPond, and enjoy
beautiful printed scores!

@c bad node name for ancient notation to avoid conflict
@menu
* Single staff::
* Piano templates::
* String quartet::
* Vocal ensembles::
* Ancient notation templates::
* Jazz combo::
* lilypond-book templates::
@end menu


@node Single staff
@appendixsec Single staff

@appendixsubsec Notes only

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc,addversion]
{single-staff-template-with-only-notes.ly}


@appendixsubsec Notes and lyrics

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc,addversion]
{single-staff-template-with-notes-and-lyrics.ly}

@appendixsubsec Notes and chords

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{single-staff-template-with-notes-and-chords.ly}

@appendixsubsec Notes, lyrics, and chords.

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{single-staff-template-with-notes,-lyrics,-and-chords.ly}


@node Piano templates
@appendixsec Piano templates

@appendixsubsec Solo piano

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{piano-template-simple.ly}

@appendixsubsec Piano and melody with lyrics

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{piano-template-with-melody-and-lyrics.ly}

@appendixsubsec Piano centered lyrics

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{piano-template-with-centered-lyrics.ly}

@appendixsubsec Piano centered dynamics

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{piano-template-with-centered-dynamics.ly}


@node String quartet
@appendixsec String quartet

@appendixsubsec String quartet

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{string-quartet-template-simple.ly}

@appendixsubsec String quartet parts

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{string-quartet-template-with-separate-parts.ly}


@node Vocal ensembles
@appendixsec Vocal ensembles

@appendixsubsec SATB vocal score

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{vocal-ensemble-template.ly}

@appendixsubsec SATB vocal score and automatic piano reduction

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{vocal-ensemble-template-with-automatic-piano-reduction.ly}

@appendixsubsec SATB with aligned contexts

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{vocal-ensemble-template-with-lyrics-aligned-below-and-above-the-staves.ly}


@c bad node name to avoid node name conflict
@node Ancient notation templates
@appendixsec Ancient notation templates

@appendixsubsec Transcription of mensural music

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{ancient-notation-template----modern-transcription-of-mensural-music.ly}

@appendixsubsec Gregorian transcription template

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{ancient-notation-template----modern-transcription-of-gregorian-music.ly}

@node Jazz combo
@appendixsec Jazz combo

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{jazz-combo-template.ly}




@ignore
This isn't very useful, and only duplicates material in
"global issues".  And if this info changes, this section often
gets forgotten.

@no de Other templates
@se ction Other templates
@su bsection All headers

This template displays all available headers.  Some of them are only
used in the Mutopia project; they don't affect the printed output at
all.  They are used if you want the piece to be listed with different
information in the Mutopia database than you wish to have printed on the
music.  For example, Mutopia lists the composer of the famous D major
violin concerto as TchaikovskyPI, whereas perhaps you wish to print
"Petr Tchaikowski" on your music.

@ The `line-width' is for \header.
@li lypond[quote,verbatim,ragged-right,line-width]
\version "2.11.61"
\header {
  dedication = "dedication"
  title = "Title"
  subtitle = "Subtitle"
  subsubtitle = "Subsubtitle"
  composer = "Composer (xxxx-yyyy)"
  opus = "Opus 0"
  piece = "Piece I"
  meter = "meter"
  instrument = "Instrument"
  arranger = "Arranger"
  poet = "Poet"
  texttranslator = "Translator"
  copyright = "public domain"

  % These are headers used by the Mutopia Project
  % http://www.mutopiaproject.org/
  mutopiatitle = ""
  mutopiacomposer = ""
  mutopiapoet = ""
  mutopiainstrument = ""
  date = "composer's dates"
  source = "urtext "
  maintainer = "your name here"
  maintainerEmail = "your email here"
  maintainerWeb = "your home page"
  lastupdated = "2004/Aug/26"
}

\score {
  { c'4 }
  \header {
    piece = "piece1"
    opus = "opus1"
  }
}

\score {
  { c'4 }
  \header {
    piece = "piece2"
    opus = "opus2"
  }
}
@end lilypond
@end ignore


@node lilypond-book templates
@appendixsec lilypond-book templates

These templates are for use with @code{lilypond-book}.  If you're not familiar
with this program, please refer to @rprogram{LilyPond-book}.

@appendixsubsec LaTeX

You can include LilyPond fragments in a LaTeX document.

@example
\documentclass[]@{article@}

\begin@{document@}

Normal LaTeX text.

\begin@{lilypond@}
\relative c'' @{
a4 b c d
@}
\end@{lilypond@}

More LaTeX text.

\begin@{lilypond@}
\relative c'' @{
d4 c b a
@}
\end@{lilypond@}
\end@{document@}
@end example

@appendixsubsec Texinfo

You can include LilyPond fragments in Texinfo; in fact, this entire manual
is written in Texinfo.

@example
\input texinfo
@@node Top

Texinfo text

@@lilypond[verbatim,fragment,ragged-right]
a4 b c d
@@end lilypond

More Texinfo text

@@lilypond[verbatim,fragment,ragged-right]
d4 c b a
@@end lilypond

@@bye
@end example


@appendixsubsec xelatex

@verbatim
\documentclass{article}
\usepackage{ifxetex}
\ifxetex
%xetex specific stuff
\usepackage{xunicode,fontspec,xltxtra}
\setmainfont[Numbers=OldStyle]{Times New Roman}
\setsansfont{Arial}
\else
%This can be empty if you are not going to use pdftex
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{mathptmx}%Times
\usepackage{helvet}%Helvetica
\fi
%Here you can insert all packages that pdftex also understands
\usepackage[ngerman,finnish,english]{babel}
\usepackage{graphicx}

\begin{document}
\title{A short document with LilyPond and xelatex}
\maketitle

Normal \textbf{font} commands inside the \emph{text} work,
because they \textsf{are supported by \LaTeX{} and XeteX.}
If you want to use specific commands like \verb+\XeTeX+, you
should include them again in a \verb+\ifxetex+ environment.
You can use this to print the \ifxetex \XeTeX{} command \else
XeTeX command \fi which is not known to normal \LaTeX .

In normal text you can easily use LilyPond commands, like this:

\begin{lilypond}
{a2 b c'8 c' c' c'}
\end{lilypond}

\noindent
and so on.

The fonts of snippets set with LilyPond will have to be set from
inside
of the snippet. For this you should read the AU on how to use
lilypond-book.

\selectlanguage{ngerman}
Auch Umlaute funktionieren ohne die \LaTeX -Befehle, wie auch alle
anderen
seltsamen Zeichen: __ ______, wenn sie von der Schriftart
unterst__tzt werden.
\end{document}
@end verbatim


