@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-

@ignore
    Translation of GIT committish: e2070eadd7d3d7a87450aab195a48945ee0b144a

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore

@c \version "2.12.0"

@c Translators: Jean-Charles Malahieude

@node Conversion à partir d'autres formats
@chapter Conversion à partir d'autres formats
@translationof Converting from other formats

La musique peut aussi être récupérée par importation d'un autre
format.  Ce chapitre passe en revue les différents outils prévus à cet
effet et inclus dans la distribution.  Il existe d'autres outils qui
permettent de générer du code LilyPond, comme par exemple des
séquenceurs en mode graphique ou des convertisseurs XML.  Pour plus
de détails, rendez-vous sur le @uref{http://@/lilypond@/.org,site}.

Il s'agit de programmes distincts de @command{lilypond} qui se lancent
en ligne de commande.  Pour plus de précisions, reportez-vous au
chapitre @ref{Utilisation en ligne de commande}.  Si vous utilisez MacOS 10.3 ou 10.4
et recontrez quelque problème avec l'un de ces scripts, comme
@code{convert-ly}, reportez-vous au chapitre @ref{Spécificités pour MacOS X}. 

@knownissues

Les développeurs ne sont malheureusement pas suffisament nombreux et
disponibles pour maintenir à jour ces programmes, considérez-les donc
@emph{en l'état}.  Nous acceptons les patches avec plaisir, mais il y a
peu de chance pour que nous soyons en mesure de résoudre les bogues de
ces programmes.

@menu
* Utilisation de midi2ly::            importation de musique au format MIDI.
* Utilisation de musicxml2ly::        importation de partitions au format MusicXML.
* Utilisation d'abc2ly::             importation de partitions au format ABC.
* Utilisation d'etf2ly::             importation de partitions Finale.
* Génération de fichiers LilyPond::   interfaces graphiques, outils de
                                transcription et de composition algorithmique.
@end menu



@node Utilisation de midi2ly
@section Utilisation de @command{midi2ly}
@translationof Invoking midi2ly

@cindex MIDI

@command{midi2ly} traduit un fichier MIDI de Type@tie{}1 en un fichier
source LilyPond.

MIDI (Music Instrument Digital Interface) constitue un standard pour
les instruments. Il spécifie le cablage, un protocole série et un
format de fichier.  Le format de fichier MIDI est de ce fait un format
standard pour exporter de la musique à partir d'autres programmes, et
cette faculté prend tout son intérêt lorsqu'un programme dispose d'un
convertisseur capable d'importer directement un fichier.

@command{midi2ly} convertit les pistes en contextes de portée
(@rinternals{Staff}) et les canaux en contextes de voix
(@rinternals{Voice}).  Les hauteurs sont rendues en mode relatif, et
les durées spécifiées lorsque nécessaire.

Vous pouvez enregistrer un fichier MIDI grâce à un clavier
électronique et ensuite le convertir en fichier @file{.ly}.  Néanmoins
le rythme humain n'a pas une précision suffisante pour qu'une
conversion MIDI à ly ne se fasse sans surprise.  En le couplant à une
quantisation (options @code{-s} et @code{-d}), @command{midi2ly} tente
de compenser dans la mesure du possible ces problèmes de
temporisation.  C'est la raison pour laquelle le recours à
@command{midi2ly} n'est pas recommandé pour des fichiers midi générés
manuellement.


Pour le lancer en ligne de commande, procédez ainsi :
@example
midi2ly [@var{option}]@dots{} @var{fichier-midi}
@end example

Notez bien que, par @qq{ligne de commande}, nous parlons de la ligne de
commande du système.  Pour plus de précisions, reportez-vous à
@ref{Utilisation en ligne de commande}. 

@command{midi2ly} accepte les options suivantes :

@table @code
@item -a, --absolute-pitches
Rendu en hauteurs absolues.

@item -d, --duration-quant=@var{DUR}
Quantiser les durées à partir de @var{DUR}.

@item -e, --explicit-durations
Rendu explicite des durées.

@item -h,--help
Afficher un résumé des utilisations.

@item -k, --key=@var{acc}[:@var{minor}]
Déterminer la tonalité par défaut.  @math{@var{acc} > 0} fixe le
nombre de dièses ; @math{@var{acc} < 0} le nombre de bémols.  Une
tonalité mineure est spécifiée par l'emploi de @code{:1}.

@item -o, --output=@var{file}
Générer le résultat dans le fichier @var{file}.

@item -s, --start-quant=@var{DUR}
Quantiser le début des notes sur @var{DUR}.

@item -t, --allow-tuplet=@var{DUR}*@var{NUM}/@var{DEN}
Accepter des n-olets de valeur @var{DUR}*@var{NUM}/@var{DEN}.

@item -V, --verbose
Mode verbeux.

@item -v, --version
Afficher le numéro de version.

@item -w, --warranty
Afficher les mentions de garantie et de copyright.

@item -x, --text-lyrics
Interpréter le texte comme des paroles.
@end table


@knownissues

Le tuilage en arpège ne sera pas rendu correctement.  La première note
sera lue et les suivantes ignorées.  Affectez-leur une durée unique et
ajoutez une indication de phrasé ou de pédale.


@node Utilisation de musicxml2ly
@section Utilisation de @command{musicxml2ly}
@translationof Invoking musicxml2ly

@cindex MusicXML

@uref{http://@/www.@/musicxml@/.org/,MusicXML} est un
dialecte XML pour représenter la notation musicale.

@command{musicxml2ly} extrait, à partir d'un fichier MusicXML, les
notes, articulations, structure de la partition, paroles, etc. 
et les écrit dans un fichier @var{.ly}.  Il se lance en ligne de
commande.

Pour le lancer en ligne de commande, procédez ainsi :
@example
musicxml2ly [@var{option}]@dots{} @var{fichier-xml}
@end example

Notez bien que, par @qq{ligne de commande}, nous parlons de la ligne de
commande du système.  Pour plus de précisions, reportez-vous à
@ref{Utilisation en ligne de commande}. 

Si le nom du fichier est @file{-}, @command{musicxml2ly} lira
directement à partir de la ligne de commande.  

@command{musicxml2ly} accepte les options suivantes :

@table @code
@item -a, --absolute
Rendu en hauteurs absolues.

@item -h,--help
Afficher un résumé des utilisations.

@item -l, --language=LANG
Utiliser un autre fichier de définition liguistique @file{LANG.ly} 
et les noms de notes correspondants, comme par exemple 
@var{deutsch} pour @file{deutsch.ly} et noms de notes en allemand.

@item --lxml
Utiliser le paquetage Python lxml.etree, moins gourmand en mémoire et
temps de calcul, pour effectuer l'annalyse XML.

@item --nd --no-articulation-directions
Ne pas convertir la direction (@code{^}, @code{_} ou @code{-}) des
articulations, nuances, etc.

@item --no-beaming
Ne pas convertir les informations de ligature ; laisser LilyPond gérer
les ligatures automatiquement. 

@item -o,--output=@var{fichier}
Générer le résultat dans le fichier @var{fichier}.  S'il n'est pas
déterminé, ce sera @var{fichier-xml}@file{.ly} ; @file{-} produira le
résultat sur la sortie standard (@var{stdout}).

@item -r,--relative
Rendu en hauteurs relatives (mode par défaut).

@item -v,--verbose
Mode verbeux.

@item --version
Afficher le numéro de version.

@item -z,--compressed
Le fichier d'entrée est un fichier MusicXML zippé.
@end table


@node Utilisation d'abc2ly
@section Utilisation de @command{abc2ly}
@translationof Invoking abc2ly

@cindex ABC

ABC est un format relativement simple basé sur l'ASCII.  Sa
description est disponible sur le 
@uref{http://@/www@/.walshaw@/.plus@/.com/@/abc/@/learn@/.html,site
d'ABC}. 

@command{abc2ly} traduit du format ABC au format LilyPond.

Pour le lancer en ligne de commande, procédez ainsi :
@example
abc2ly [@var{option}]@dots{} @var{fichier-abc}
@end example

@command{abc2ly} accepte les options suivantes :

@table @code
@item -b,--beams=None
Préserver la notion de lien de croches propre à ABC.
@item -h,--help
Afficher un résumé des utilisations.
@item -o,--output=@var{file}
Générer le résultat dans le fichier @var{file}.
@item -s,--strict
Être strict sur la réussite.
@item --version
Afficher le numéro de version.
@end table

Il est possible d'ajouter des bribes de code LilyPond dans un fichier
source ABC.  Ainsi, l'assertion

@example
%%LY voices \set autoBeaming = ##f
@end example

aura pour conséquence d'insérer le texte qui suit le mot-clé @qq{voices}
dans la voix correspondante du fichier LilyPond.

De la même manière,

@example
%%LY slyrics more words
@end example

placera le texte suivant le mot-clé @qq{slyrics} dans une ligne de paroles.


@knownissues

Le standard ABC n'est pas si @qq{standard} que cela.  Pour des
fonctionnalités étendues, comme la polyphonie, existent différentes
conventions.

Un fichier comportant plusieurs morceaux ne peut être converti.

ABC synchronise paroles et musique en début de ligne ;
@command{abc2ly} ne le fait pas.

@command{abc2ly} ignore les ligatures ABC.


@node Utilisation d'etf2ly
@section Utilisation de @command{etf2ly}
@translationof Invoking etf2ly

@cindex ETF
@cindex Enigma
@cindex Finale
@cindex Coda Technology

ETF (Enigma Transport Format) est l'un des formats utilisés par le
logiciel Finale, édité par Coda Music Technology.  @command{etf2ly}
convertit partiellement les fichiers ETF en fichiers source LilyPond.


Pour le lancer en ligne de commande, procédez ainsi :
@example
etf2ly [@var{option}]@dots{} @var{fichier-etf}
@end example

Notez bien que, par @qq{ligne de commande}, nous parlons de la ligne de
commande du système.  Pour plus de précisions, reportez-vous à
@ref{Utilisation en ligne de commande}. 

@command{etf2ly} accepte les options suivantes :

@table @code
@item -h,--help
Afficher cette aide.
@item -o, --output=@var{file}
Générer le résultat dans le fichier @var{file}.
@item --version
Afficher le numéro de version.
@end table


@knownissues

La liste des scripts d'articulation est incomplète.  Les mesures vides
perturbent @command{etf2ly}.  Les séquences de notes d'ornement ne se
terminent pas de manière satisfaisante.



@node Génération de fichiers LilyPond
@section Génération de fichiers LilyPond
@translationof Generating LilyPond files

@cindex programmes externes générant des fichiers LilyPond

LilyPond ne prend pas en charge d'autre format. Cependant, certains
outils indépendants permettent de générer des fichiers LilyPond.

Nous citerons entre autres

@itemize 
@item
@uref{http://@/denemo@/.org,Denemo}, une interface
graphique pour l'édition de partition.
@item
@uref{http://www@/.volny@/.cz/smilauer/rumor/rumor@/.html,Rumor}, un
convertisseur temps-réel de MIDI monophonique à LilyPond.
@item
@uref{http://nicolas@/.sceaux@/.free@/.fr/lilypond/lyqi@/.html,lyqi}, un
mode majeur pour Emacs.
@item
@uref{http://@/www@/.nongnu@/.org/@/xml2ly/, xml2ly}, qui importe du
@uref{http://@/www@/.musicxml@/.com/xml@/.html,MusicXML}.
@item
@uref{http://@/noteedit@/.berlios@/.de,NoteEdit}
qui importe du @uref{http://@/www@/.musicxml@/.com/xml@/.html,MusicXML}. 
@item
@uref{http://@/www@/.rosegardenmusic@/.com,Rosegarden},
qui importe du MIDI.
@item
@uref{http://@/common-lisp@/.net/project/fomus/,FOMUS},
une bibliothèque LISP pour générer de la notation musicale. 
@item
@uref{http://@/vsr@/.informatik@/.tu-chemnitz@/.de/staff/jan/nted/nted.xhtml,NtEd}
assure, de manière expérimentale, un export vers LilyPond. 
@item
@uref{http://@/www@/.tuxguitar@/.com@/.ar/,TuxGuitar} peut exporter au
format LilyPond. 
@item
@uref{http://@/musescore@/.org,MuseScore} peut exporter au format LilyPond.
@end itemize

