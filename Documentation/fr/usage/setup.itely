@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-

@ignore
    Translation of GIT committish: e2070eadd7d3d7a87450aab195a48945ee0b144a

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore

@c \version "2.12.0"

@c Translators: Jean-Charles Malahieude

@node Environnement de travail
@chapter Environnement de travail
@translationof Setup

Ce chapitre traite des options de configuration à effectuer après
l'installation de LilyPond et de ses dépendances.  Il tient lieu de
référence en la matière : ne vous intéressez qu'à la rubrique qui vous
concerne directement.

@menu
* Spécificités pour certains systèmes::
* LilyPond et les éditeurs de texte::
* Pointer-cliquer::
@end menu

@node Spécificités pour certains systèmes
@section Spécificités pour certains systèmes
@translationof Setup for specific Operating Systems

Cette partie explique comment optimiser l'installation propres à
certains systèmes.

@menu
* Spécificités pour MacOS X::
@end menu

@node Spécificités pour MacOS X
@subsection Spécificités pour MacOS X
@translationof Setup for MacOS X

@subsubheading Utilisation de scripts Python sur MacOS 10.3 ou 10.4

Les exécutables de LilyPond pour MacOS X ne fournissent pas Python, bien
qu'une version au moins de niveau 2.4 soit requise par
@command{convert-ly}.  Ainsi, et si vous utilisez MacOS 10.3 ou 10.4,
devrez-vous installer une version plus récente de Python à partir de
@uref{http://python.org/download/}, puis éditer la première ligne de
@command{convert-ly} et @command{lilypond-book}. Si les exécutables du
Python que vous venez d'installer sont dans votre @var{PATH}, cette ligne
doit être :

@example
#!/usr/bin/env python
@end example

@noindent
et dans le cas contraire

@example
#!@var{/chemin/vers/nouvelle_installation/python}
@end example


@subsubheading MacOS X et la ligne de commande

Les scripts tels que @command{lilypond-book}, @command{convert-ly},
@command{abc2ly}, et même @command{lilypond}, sont insclus dans un
fichier @code{.app} pour MacOS@tie{}X.  Vous pourrez les lancer
directement en ligne de commande de la manière suivante :

@example
@var{chemin/vers}/LilyPond.app/Contents/Resources/bin/lilypond
@end example

@noindent
Il en va de même pour les autres scripts de ce répertoire, y compris
@command{lilypond-book}, @command{convert-ly}, @command{abc2ly}, etc.

Une autre façon de procéder consiste à créer des scripts qui ajoutent
automatiquement le chemin.  À cette intention, créez un répertoire qui
contiendra ces scripts :

@example
mkdir -p ~/bin
cd ~/bin
@end example

Créez un fichier appelé @code{lilypond} et qui contiendra :

@example
exec @var{chemin/vers}/LilyPond.app/Contents/Resources/bin/lilypond "$@@"
@end example

Créez autant de fichiers -- @code{lilypond-book}, @code{convert-ly}, et
autres programmes annexes que vous utilisez (@code{abc2ly},
@code{midi2ly}, etc) -- que de besoin.  Remplacez simplement
@code{bin/lilypond} par @code{bin/convert-ly} ou tout autre nom de
programme dans le fichier que vous créez.

Rendez ces fichiers exécutables :

@example
chmod u+x lilypond
@end example

Ajoutez alors ce répertoire à votre @var{PATH}.  Modifiez le fichier
@code{.profile} -- créez-le si besoin -- de votre répertoire personnel,
de telle sorte qu'il contienne

@example
export PATH=$PATH:~/bin
@end example

@noindent
Ce fichier doit se terminer par une ligne vide.

Notez que @var{chemin/vers} devrait correspondre à @code{/Applications/}.


@node LilyPond et les éditeurs de texte
@section LilyPond et les éditeurs de texte
@translationof Text editor support

@cindex editors
@cindex vim
@cindex emacs
@cindex modes, editor
@cindex syntax coloring
@cindex coloring, syntax

Certains éditeurs de texte prennent en charge LilyPond.

@menu
* Mode Emacs::
* Mode Vim::
* jEdit::
* TexShop::
* TextMate::
* LilyKDE::
@end menu

@node Mode Emacs
@subsection Mode Emacs
@translationof Emacs mode

Emacs dispose d'un @file{lilypond-mode} qui fournit l'autocomplétion des
mots-clés, l'indentation, les appariements spécifiques à LilyPond, la
coloration synthaxique, ainsi que des raccourcis pour compiler et
consulter les manuels de LilyPond en mode info.  Si le
@file{lilypond-mode} n'était pas installé sur votre système, procédez
comme ci-dessous.

Le répertoire @file{elisp} inclus dans les sources contient aussi un
mode pour saisir la musique et lancer LilyPond.  Faites @command{make
install} pour l'installer dans votre @var{elispdir}.  Le fichier
@file{lilypond-init.el} devrait trouver sa place dans
@var{load-path}@file{/site-start.d/} ou bien ajouté à votre
@file{~/.emacs} ou @file{~/.emacs.el}.

En tant que simple utilisateur, vous pouvez toujours ajouter votre
propre répertoire (par exemple @file{~/site-lisp/}) à votre
@var{load-path} en ajoutant la ligne suivante -- modifiée en conséquence
-- à votre @file{~/.emacs} :

@c any reason we do not advise:  (push "~/site-lisp" load-path)
@example
(setq load-path (append (list (expand-file-name "~/site-lisp")) load-path))
@end example


@node Mode Vim
@subsection Mode Vim
@translationof Vim mode

En ce qui concerne @uref{http://@/www@/.vim@/.org,VIM}, LilyPond fournit
un fichier @file{vimrc} qui gère la coloration synthaxique.  Le
répertoire @code{$VIM} inclus dans les sources contient aussi un
mode pour saisir la musique et lancer LilyPond.

Le type de fichier LilyPond sera reconnu si votre
@file{~/.vim/filetype.vim} contient

@example
if exists("did_load_filetypes")
  finish
endif
augroup filetypedetect
  au! BufNewFile,BufRead *.ly,*.ily           setf lilypond
augroup END
@end example

N'oubliez pas d'inclure ce chemin en ajoutant à votre @file{~/.vimrc} la
ligne suivante :

@example
set runtimepath+=/usr/local/share/lilypond/$@{LILYPOND_VERSION@}/vim/
@end example

@noindent
où $@{LILYPOND_VERSION@} correspond à votre version de LilyPond.  Si
LilyPond n'est pas installé dans @file{/usr/local/}, modifiez ce chemin
en conséquence.


@node jEdit
@subsection jEdit
@translationof jEdit

Créé en tant que greffon pour l'éditeur de texte
@uref{http://@/www@/.jedit@/.org@/,jEdit}, LilyPondTool est l'outil le
plus riche en fonctionnalités pour éditer des partitions écrites avec
LilyPond.  Cela inclue un assistant à la création de document qui prend
en charge les paroles, un visionneur de PDF avec gestion du
pointer-cliquer.  Captures d'écran, démonstrations et instructions
d'installation sont disponibles sur le site de
@uref{http://lilypondtool@/.organum@/.hu,LilyPondTool}.


@node TexShop
@subsection TexShop
@translationof TexShop

L'éditeur
@uref{http://@/www@/.uoregon@/.edu/~koch/texshop/index@/.html,TexShop}
pour MacOS@tie{}X peut prendre en charge LilyPond, lilypond-book et
convert-ly, en lui adjoignant les extensions disponibles
@uref{http://@/www@/.dimi@/.uniud@/.it/vitacolo/freesoftware@/.html,ici}.


@node TextMate
@subsection TextMate
@translationof TextMate

TextMate dispose d'un greffon pour LilyPond.  Vous pouvez l'installer en
lançant :

@example
mkdir -p /Library/Application\ Support/TextMate/Bundles
cd /Library/Application\ Support/TextMate/Bundles
svn co http://macromates.com/svn/Bundles/trunk/Bundles/Lilypond.tmbundle/
@end example


@node LilyKDE
@subsection LilyKDE
@translationof LilyKDE

@uref{http://lilykde.googlecode.com/,LilyKDE} est un greffon pour
@uref{http://kate-editor.org/,Kate}, l'éditeur de texte de
l'environnement de bureau KDE.  Il dispose d'un assistant à la création
de document LilyPond et un visionneur de PDF.

LilyKDE peut s'interfacer avec
@uref{http://www.volny.cz/smilauer/rumor/,Rumor}, afin de pouvoir entrer
la musique à l'aide d'un clavier MIDI.

LilyKDE gère l'hyphénation des paroles, et le gestionnaire de fichiers
de KDE permet de lancer LilyPond sur plusierus fichiers simultanément.


@node Pointer-cliquer
@section Pointer-cliquer
@translationof Point and click

Le pointer-cliquer (@emph{point and click}) permet de se retrouver
directement dans le fichier source, à la note que l'on pointe dans le
visionneur de PDF.  Ceci facilite grandement le repérage des erreurs à
partir du fichier imprimable.

Lorsque cette fonctionnalité est active, LilyPond ajoute des hyperliens
au fichier PDF.  Ces liens sont transmis au navigateur internet qui se
charge d'ouvrir un éditeur de texte à l'enfroit même où le curseur
pointe.

Afin que cette chaîne de traitement soit pleinement opérationnelle, il
faut configurer votre visionneur de PDF de façon à ce qu'il suive les
liens grâce au script @file{lilypond-invoke-editor} fourni avec
LilyPond.


Pour Xpdf, sous UNIX, vous devrez insérer la ligne suivante dans
le fichier @file{xpdfrc} -- soit @file{/etc/xpdfrc}, soit dans votre
répertoire personnel @file{.xpdfrc}.

@example
urlCommand     "lilypond-invoke-editor %s"
@end example

@file{lilypond-invoke-editor} est un petit programme assistant.  Il se
charge d'appeler un éditeur pour les identifants de ressource
(@emph{URI}) de type @code{textedit}, et un navigateur pour les autres.
Il teste en outre la variable d'environnement @code{EDITOR} pour les cas
suivant :

@table @code
@item emacs
  sera alors lancée la commande
@example
emacsclient --no-wait +@var{line}:@var{column} @var{file}
@end example
@item vim
  sera alors lancée la commande
@example
gvim --remote +:@var{line}:norm@var{char} @var{file}
@end example

@item nedit
  sera alors lancée la commande
@example
nc -noask +@var{line} @var{file}'
@end example
@end table

La variable d'environnement @code{LYEDITOR} permet d'anticiper cette
affectation, puisqu'elle contient la commande qui permet de lancer
l'éditeur en tenant compte des valeurs respectives de @code{%(file)},
@code{%(column)} , et@code{%(line)}. Par exemple,

@example
emacsclient --no-wait +%(line)s:%(column)s %(file)s
@end example

@noindent
en variable d'environnement @code{LYEDITOR} revient au lancement d'un
client emacs standard.


@cindex ficher de sortie, taille
@cindex taille du ficher de sortie

L'option pointer-cliquer accroît la taille des fichiers de manière
significative.  Afin de réduire la taille des fichiers PDF et PS, il est
toujours possible de désactiver le pointer-cliquer en ajoutant

@example
\pointAndClickOff
@end example

@noindent
dans le fichier @file{.ly}.  Il peut alors être activé de manière
explicite grâce à

@example
\pointAndClickOn
@end example

Le pointer-cliquer peut aussi être désactivé au moment de la compilation
en ligne de commande :

@example
lilypond -dno-point-and-click fichier.ly
@end example

@warning{Lorsqu'un fichier LilyPond est destiné à être redistribué,
pensez à désactiver le pointer-cliquer, de telle sorte que les chemins
d'accès et autres informations propres à votre système ne se retrouvent
pas inclus dans le fichier  @file{.pdf}.}

