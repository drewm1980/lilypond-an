@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-
@c This file is part of lilypond.tely
@ignore
    Translation of GIT committish: bdf8540b74167817eab96ed3d13b35477217f9fe

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c \version "2.11.61"

@c Translators: Valentin Villenave
@c Translation checkers: Jean-Charles Malahieude

@node Vocal music
@section Vocal music

Dans la mesure où les fichiers LilyPond sont constitués de texte,
traiter de la musique vocale demande de prendre en compte deux spécificités :

@itemize @bullet
@item
Les paroles sont saisies comme étant du texte, non des notes.
Ainsi, le code@tie{}@code{d} sera interprété comme une syllabe, et non
comme la note@tie{}ré (D pour les non latinistes).

@item
Les paroles doivent s'aligner avec les notes de la mélodie correspondante.
@end itemize

Plusieurs solutions existent pour ajouter des paroles ; nous les
examinerons par degré croissant de complexité.

@menu
* Common notation for vocal music::
* Entering lyrics::  
* Aligning lyrics to a melody::  
* Specific uses of lyrics::         
* Stanzas::                     
@end menu

@commonprop

S'assurer que tous les éléments textuels et les paroles respectent
les marges du document requiert des calculs relativement lourds ; c'est
la raison pour laquelle LilyPond, par défaut, ne s'en préoccupe pas.
Vous pouvez cependant l'y forcer en ajoutant le code

@example
\override Score.PaperColumn #'keep-inside-line = ##t
@end example

Pour que les paroles évitent également les barres de mesure, ajoutez
@example
\layout @{
  \context @{
    \Lyrics
      \consists "Bar_engraver"
      \consists "Separating_line_group_engraver"
      \override BarLine #'transparent = ##t
  @}
@}
@end example


@node Common notation for vocal music
@subsection Common notation for vocal music

@untranslated

@menu
* References for vocal music and lyrics::
* Opera::
* Song books::
* Chants::
* Spoken music::
* Ancient vocal music::
@end menu

@node References for vocal music and lyrics
@unnumberedsubsubsec References for vocal music and lyrics

@untranslated

@node Opera
@unnumberedsubsubsec Opera

@untranslated

@node Song books
@unnumberedsubsubsec Song books

@untranslated

@node Spoken music
@unnumberedsubsubsec Spoken music

Le @emph{parlato} est du texte scandé en rythme, mais sans hauteurs
définies ; il est indiqué par des notes en croix, à l'instar des
percussions --- voir @ref{Special note heads}.

@node Chants
@unnumberedsubsubsec Chants

@untranslated

@node Ancient vocal music
@unnumberedsubsubsec Ancient vocal music

@untranslated


@node Entering lyrics
@subsection Entering lyrics

@menu
* Lyrics explained::
* Setting simple songs::
* Working with lyrics and variables::
@end menu


@node Lyrics explained
@unnumberedsubsubsec Lyrics explained

@cindex paroles
@funindex \lyricmode
@cindex ponctuation
@cindex espaces, dans les paroles
@cindex guillemets, dans les paroles

Il existe un mode de saisie spécialement adapté aux paroles.  On
l'introduit avec le mot-clé @code{\lyricmode}, ou en utilisant 
@code{\addlyrics} ou @code{\lyricsto}.  Ce mode vous permet de saisir
des paroles, ainsi que leur ponctuation, et le caractère @code{d} ne
sera plus interprété comme une note, mais comme une syllabe.  Les
syllabes sont saisies comme des notes, mais les hauteurs sont alors
remplacées par du texte.  Exemple avec une comptine anglaise :

@example
\lyricmode @{ Twin-4 kle4 twin- kle litt- le star2 @}
@end example

Ici on a choisi de saisir explicitement la durée de chaque syllabe. Cependant,
il est aussi possible d'attribuer automatiquement chaque syllabe à une
note d'une mélodie ou d'une voix existante, avec @code{\addlyrics} ou
@code{\lyricsto}.  
@c  TODO: broken but exists Aligning lyrics
@c For more details see @ref{Aligning contexts}.

Dans les paroles, un mot ou une syllabe commence par une lettre de
l'alphabet, et se termine par un espace (éventuellement précédé d'un
chiffre).  Toute syllabe doit donc être séparée d'une autre par un
espace, tout autre caractère étant considéré comme partie intégrante
de cette même syllabe.  L'exemple suivant comporte une faute de frappe
évidente :

@example
\lyricmode @{ lah- lah@}
@end example

la dernière syllabe contient une @code{@}}, il y a de fait un défaut de
parité avec l'accolade ouvrante, et la compilation échouera fort
probablement. 


@funindex \property dans \lyricmode

@noindent
De la même manière, un point concluant une suite de lettres sera
partie intégrante de la chaîne résultante. Par conséquent, il est
impératif d'insérer des espaces lorsque vous modifiez les propriétés
d'une commande.  En d'autres termes, ne saisissez pas

@example
\override Score.LyricText #'font-shape = #'italic
@end example

@noindent
mais plutôt

@example
\override Score . LyricText #'font-shape = #'italic
@end example

@funindex _
@cindex espaces, dans les paroles
@cindex guillemets, dans les paroles
@cindex liaisons, dans les paroles

Pour attribuer plus d'une syllabe à une même note, vous pouvez mettre
ces syllabes entre guillemets, ou bien remplacer l'espace par un
caractère souligné (@code{_}), ou encore utiliser un tilde (@code{~})
pour obtenir une liaison entre les syllabes.

@lilypond[quote,ragged-right,fragment,verbatim]
\time 3/4
\relative c' { c2 e4 g2 e4 }
\addlyrics { gran- de_a- mi- go }
\addlyrics { pu- "ro y ho-" nes- to }
\addlyrics { pu- ro~y~ho- nes- to }
@end lilypond

Cette liaison adaptée aux paroles correspond au caractère Unicode
U+203F, et n'apparaîtra dans la partition que s'il existe une police
incluant ce symbole (par exemple DejaVuLGC) installée sur le système.


Pour utiliser des lettres accentuées ou des caractères spéciaux 
--- cœurs ou guillemets inversés par exemple --- il suffit de les insérer
dans le fichier et de veiller à sauvegarder ce dernier avec le codage
UTF-8.  Voir à ce sujet @ref{Text encoding} pour plus de détails.

@lilypond[quote,ragged-right,fragment,verbatim]
\relative c' { e4 f e d e f e2 }
\addlyrics { He said: “Let my peo ple go”. }
@end lilypond

Pour utiliser des guillemets informatiques standard, faites-les
précéder d'une barre oblique inverse :

@lilypond[quote,ragged-right,fragment,verbatim]
\relative c' { \time 3/4 e4 e4. e8 d4 e d c2. }
\addlyrics { "\"I" am so lone- "ly\"" said she }
@end lilypond

Expliquer exactement comment LilyPond repère le début d'un mot en mode
paroles (Lyrics) est quelque peu compliqué.

En mode Lyrics, un mot peut commencer par : tout caractère alphabétique,
@code{_}, @code{?}, @code{!}, @code{:}, @code{'}, un des codes de
contrôle @code{^A} à @code{^F} et @code{^Q} à @code{^W}, @code{^Y},
@code{^^}, tout caractère ASCII de code strictement supérieur à 127, ou
enfin un des symboles @code{`}, @code{'}, @code{"}, ou @code{^}, s'il
est précédé d'une barre oblique inverse.

Pour définir un identificateur contenant des paroles, il faut utiliser
la fonction @code{lyricmode}.

@example
verseOne = \lyricmode @{ Joy to the world the Lord is come @}
\score @{
  <<
    \new Voice = "one" \relative c'' @{
      \autoBeamOff
      \time 2/4
      c4 b8. a16 g4. f8 e4 d c2
    @}
    \addlyrics @{ \verseOne @}
  >>
@}
@end example


@seealso

Référence du programme : @rinternals{LyricText}, @rinternals{LyricSpace}.


@node Setting simple songs
@unnumberedsubsubsec Setting simple songs

@cindex \addlyrics

Le plus simple pour ajouter des paroles à une mélodie est d'adjoindre 

@example
\addlyrics @{ @var{les paroles} @}
@end example

@noindent
à la mélodie.  En voici un exemple :

@lilypond[ragged-right,verbatim,fragment,quote]
\time 3/4
\relative { c2 e4 g2. }
\addlyrics { play the game }
@end lilypond

On peut ajouter davantage de couplets en multipliant le nombre de
sections @code{\addlyrics}.

@lilypond[ragged-right,verbatim,fragment,quote]
\time 3/4
\relative { c2 e4 g2. }
\addlyrics { play the game }
\addlyrics { speel het spel }
\addlyrics { joue le jeu }
@end lilypond

Cependant, la commande @code{\addlyrics} ne peut gérer les
constructions polyphoniques.  Dans ce cas, mieux vaut employer
@code{\lyricsto} et @code{\lyricmode}, comme nous le verrons dans
@ref{Lyrics explained}. 


@node Working with lyrics and variables
@unnumberedsubsubsec Working with lyrics and variables

@cindex paroles, variables

La fonction @code{\lyricmode} permet de définir une variable pour
les paroles.  Point n'est besoin de spécifier les durées si vous
utilisez @code{\addlyrics} ou @code{\lyricsto} lorsque vous y faites
référence.
 
@example
verseOne = \lyricmode @{ Joy to the world the Lord is come @}
\score @{
 <<
   \new Voice = "one" \relative c'' @{
     \autoBeamOff
     \time 2/4
     c4 b8. a16 g4. f8 e4 d c2
   @}
   \addlyrics @{ \verseOne @}
 >>
@}
@end example
 
Pour une organisation différente ou plus complexe, mieux vaut
commencer par définir la hiérarchie des portées et des paroles,
@example
\new ChoirStaff <<
  \new Voice = "soprano" @{ @emph{musique} @}
  \new Lyrics = "sopranoParoles" @{ s1 @}
  \new Lyrics = "tenorParoles" @{ s1 @}
  \new Voice = "tenor" @{ @emph{musique} @}
>>
@end example
 
puis combiner correctement les mélodies et les paroles :
 
@example
\context Lyrics = sopranoParoles \lyricsto "soprano"
@emph{les paroles}
@end example
 
@noindent

Le résultat donnera ainsi quelque chose comme
 
@example
<<\new ChoirStaff << @emph{définition de la musique} >>
 \lyricsto "soprano" @emph{etc}
 \lyricsto "alto" @emph{etc}
@emph{etc}
>>
@end example
 
@seealso
 
@c TODO: document \new Staff << Voice \lyricsto >> bug

Référence du programme : @rinternals{LyricCombineMusic},
@rinternals{Lyrics}.  


@node Aligning lyrics to a melody
@subsection Aligning lyrics to a melody

@funindex \lyricmode
@funindex \addlyrics
@funindex \lyricsto


Avant d'être imprimées, les paroles sont interprétées par le programme
dans le contexte @rinternals{Lyrics}.

@example
\new Lyrics \lyricmode @dots{}
@end example

Il y a deux grandes méthodes pour gérer le placement horizontal des
syllabes :

@itemize @bullet
@item
en alignant automatiquement les paroles sur une mélodie ou une autre
voix, en ayant recours à @code{\addlyrics} ou @code{\lyricsto} ;

@item
en affectant explicitement à chaque syllabe une durée, au sein du
contexte @code{\lyricmode}
@end itemize

@menu
* Automatic syllable durations::  
* Manual syllable durations::   
* Multiple syllables to one note::  
* Multiple notes to one syllable::  
* Skipping notes::              
* Extenders and hyphens::       
* Lyrics and repeats::          
@end menu

@node Automatic syllable durations
@unnumberedsubsubsec Automatic syllable durations

@cindex durée automatique des syllabes
@cindex paroles et mélodies

Les paroles peuvent être automatiquement alignées sous
une mélodie.  Il suffit pour cela de combiner la mélodie et les
paroles avec la commande @code{\lyricsto}.

@example
\new Lyrics \lyricsto @var{nom} @dots{}
@end example

Cette commande adapte les paroles aux notes de la voix (contexte
@rinternals{Voice} dans le jargon LilyPond) @var{nom}.  Ce contexte
@code{Voice} doit exister avant l'indication des paroles avec
@code{\lyricsto}.  La commande @code{\lyricsto} introduit
automatiquement le mode @code{\lyricmode}, donc dans ce cas vous n'avez
pas à ajouter vous-même @code{\lyricmode}.

L'exemple suivant récapitule les différentes manières de saisir des paroles.

@lilypond[quote,fragment,ragged-right,verbatim]
<<
  \new Voice = "one" \relative c'' {
    \autoBeamOff
    \time 2/4
    c4 b8. a16 g4. f8 e4 d c2
  }
  \new Lyrics \lyricmode { Joy4 to8. the16 world!4. the8 Lord4 is come.2 }
  \new Lyrics \lyricmode { Joy to the earth! the Sa -- viour reigns. }
  \new Lyrics \lyricsto "one" { No more let sins and sor -- rows grow. }
>>
@end lilypond

Le deuxième couplet n'est pas correctement disposé, aucune durée
n'ayant été spécifiée. Dans un tel cas, il aurait mieux valu utiliser
@code{\lyricsto}, comme dans le troisième couplet.

La commande @code{\addlyrics} n'est en fait qu'une simplification de
la structure employée par LilyPond pour définir les paroles.

@example
@{ MUSIQUE @}
\addlyrics @{ PAROLES @}
@end example

@noindent
est exactement la même chose que

@example
\new Voice = "blah" @{ musique @}
\new Lyrics \lyricsto "blah" @{ PAROLES @}
@end example

@node Manual syllable durations
@unnumberedsubsubsec Manual syllable durations

On peut aussi se passer de @code{\addlyrics} et de @code{\lyricsto} pour
saisir des paroles.  Dans ce cas, les syllabes sont entrées comme des
notes --- du texte remplaçant les hauteurs --- ce qui veut dire que vous
devez définir leur durée explicitement :
 
@example
play2 the4 game2.
sink2 or4 swim2.
@end example
 
La mélodie associée à ces paroles peut être spécifiée par la propriété
@code{associatedVoice} :
 
@example
\set associatedVoice = #"lala"
@end example
 
@noindent
La valeur que vous attribuez à cette propriété (ici @code{"lala"})
doit désigner un contexte @rinternals{Voice}, sans quoi les mélismes
ne seront pas imprimés correctement.
 
Voici un exemple de cette manière de procéder :
 
@lilypond[relative=1,ragged-right,verbatim,fragment,quote]
<< \new Voice = "melody" {
    \time 3/4
    c2 e4 g2.
 }
 \new Lyrics \lyricmode {
   \set associatedVoice = #"melody"
   play2 the4 game2.
 } >>
@end lilypond

@seealso
 
Référence du programme : @rinternals{Lyrics}.


@node Multiple syllables to one note
@unnumberedsubsubsec Multiple syllables to one note

@funindex _
@cindex liaisons, dans les paroles

Pour attribuer plus d'une syllabe à une même note, vous pouvez les
mettre entre guillemets, remplacer une espace par un caractère souligné
(@code{_}) pour obtenir une espace, ou bien encore utiliser un tilde
(@code{~}) pour obtenir une liaison entre les syllabes@footnote{Une
liaison adaptée aux paroles correspond au caractère Unicode U+203F, et
n'apparaîtra dans la partition que si le système dispose d'une police
installée qui contient ce symbole(par exemple DejaVuLGC).}.

@lilypond[quote,ragged-right,fragment,verbatim]
\time 3/4
\relative c' { c2 e4 g2 e4 }
\addlyrics { gran- de_a- mi- go }
\addlyrics { pu- "ro y ho-" nes- to }
\addlyrics { pu- ro~y~ho- nes- to }
@end lilypond

@seealso

Référence du programme : @rinternals{LyricCombineMusic}.

@c Here come the section which used to be "Melismata"
@c the new title might be more self-explanatory

@node Multiple notes to one syllable
@unnumberedsubsubsec Multiple notes to one syllable

@cindex mélisme
@cindex vocalise
@cindex phrasé, pour des paroles


Parfois, tout particulièrement dans la musique médiévale, plusieurs
notes correspondent à une même syllabe. Ces vocalises sont appelées mélismes.

@c this method seems to be the simplest; therefore
@c it might be better to present it first - vv

Il est possible d'indiquer tous les mélismes lors de la saisie des
paroles. Il suffit pour cela d'utiliser le caractère @code{_} pour
chaque note du mélisme.

@lilypond[relative=1,verbatim,fragment,quote]
{ \set melismaBusyProperties = #'()
 c d( e) f f( e) e e  }
\addlyrics
 { Ky -- _ _ ri __ _ _ _  e }
@end lilypond

En définissant, comme dans l'exemple ci-dessus, la propriété
@code{melismaBusyProperties}, vous obtiendrez automatiquement toutes
les liaisons de tenue et de phrasé requises.

D'autre part, la commande @code{\lyricsto} arrive aussi à détecter
automatiquement les mélismes : une seule syllabe sera placée sous un
groupe de notes comprenant des liaisons de tenue ou de phrasé.  Au cas
où un mélisme doit s'appliquer à des notes non liées, il suffit
d'adjoindre @code{\melisma} à la première note du groupe, et 
@code{\melismaEnd} à la dernière :

@lilypond[quote,relative=2,ragged-right,fragment,verbatim]
<<
  \new Voice = "lala" {
    \time 3/4
    f4 g8
    \melisma
    f e f
    \melismaEnd
    e2
  }
  \new Lyrics \lyricsto "lala" {
    la di __ daah
  }
>>
@end lilypond

Enfin, lorsque la fonction de ligature automatique (cf.
@ref{Setting automatic beam behavior}) est désactivée, le fait de les
connecter manuellement créera un mélisme.

@c TODO: there might be some more relevant place for 
@c the following link (?)

@cindex SATB
@cindex choral score

Vous trouverez un exemple complet de partition pour chœur dans la
section @rlearning{Vocal ensembles}.


@predefined

@code{\melisma}, @code{\melismaEnd}
@funindex \melismaEnd
@funindex \melisma

@seealso

@comment  Référence du programme : @rinternals{Melisma_translator}.

Exemples : @rlsr{Vocal music}.

@knownissues

Certains mélismes ne sont pas détectés automatiquement ; vous devrez
alors prolonger vous-même les syllabes concernées.

@node Skipping notes
@unnumberedsubsubsec Skipping notes

@untranslated
@ifnothtml
@englishref
@end ifnothtml

@node Extenders and hyphens
@unnumberedsubsubsec Extenders and hyphens

@cindex mélisme
@cindex extenseur
@cindex prolongateur

Un mélisme est indiqué par une ligne horizontale basse centrée
entre une syllabe et la suivante.  Une telle ligne, que nous
appellerons prolongateur ou extenseur, s'obtient en saisissant 
@samp{ __ } (notez les espaces entourant le souligné double).

@cindex trait d'union

Un trait d'union séparant deux syllabes d'un même mot s'obtient en
saisissant @samp{ -- } (notez les espaces entourant le tiret double).
Ce trait d'union sera centré entre les deux syllabes et sa longueur
sera proportionnelle à l'espace les séparant.

Dans les partitions très serrées, les traits d'union peuvent ne pas être
imprimés.  Cet inconvénient peut être contrôlé par
@code{minimum-distance} pour gérer l'espace minimum entre deux syllabes,
et @code{minimum-length}, seuil en deçà duquel il n'y a pas de trait
d'union.

@seealso

Référence du programme : @rinternals{LyricExtender},
@rinternals{LyricHyphen}


@node Lyrics and repeats
@unnumberedsubsubsec Lyrics and repeats

@untranslated
@ifnothtml
@englishref
@end ifnothtml

@node Specific uses of lyrics
@subsection Specific uses of lyrics

Une même mélodie peut se voir traitée différemment suivant les couplets.
La commande @code{\lyricsto} permet de prendre en compte ces variantes.

@menu
* Divisi lyrics::               
* Lyrics independent of notes::                
* Spacing out syllables::       
* Centering lyrics between staves::  
@end menu

@node Divisi lyrics
@unnumberedsubsubsec Divisi lyrics

En donnant un nom à chaque voix et en leur attribuant spécifiquement
des paroles, on peut créer des paroles alternatives --- également
qualifiées de @q{divisi}.

@lilypond[verbatim,ragged-right,quote]
\score{ <<
  \new Voice = "melody" {
    \relative c' {
      c4
      <<
        { \voiceOne c8 e }
        \new Voice = "splitpart" { \voiceTwo c4 }
      >>
      \oneVoice c4 c | c
    }
  }
  \new Lyrics \lyricsto "melody" { we shall not o- ver- come }
  \new Lyrics \lyricsto "splitpart" { will }
>> }
@end lilypond


Cette astuce permet de faire varier les paroles lorsqu'une section est reprise.

@lilypond[verbatim,ragged-right,quote]
\score{ <<
  \new Voice = "melody" \relative c' {
    c2 e | g e | c1 |
    \new Voice = "verse" \repeat volta 2 {c4 d e f | g1 | }
    a2 b | c1}
  \new Lyrics = "mainlyrics" \lyricsto melody \lyricmode {
    do mi sol mi do
    la si do }
  \context Lyrics = "mainlyrics" \lyricsto verse \lyricmode {
   do re mi fa sol }
  \new Lyrics = "repeatlyrics" \lyricsto verse \lyricmode {
   dodo rere mimi fafa solsol }
>>
}
@end lilypond

@node Lyrics independent of notes
@unnumberedsubsubsec Lyrics independent of notes

Dans certaines musiques vocales assez complexes, on peut avoir intérêt à
imprimer les paroles indépendamment des notes.  La mélodie sur laquelle
s'aligne les paroles --- marquée par le tag @code{lyricrhythm} dans
l'exemple suivant --- peut être insérée dans un contexte @code{Devnull},
ce qui indique à LilyPond de na pas imprimer cette mélodie dans la
partition.  Seules subsistent alors de cette mélodie les valeurs
rythmiques, sur lesquelles s'alignent les paroles.

@lilypond[quote,verbatim,ragged-right]
voice = {
  c''2
  \tag #'music { c''2 }
  \tag #'lyricrhythm { c''4. c''8 }
  d''1
}

lyr = \lyricmode { I like my cat! }

<<
  \new Staff \keepWithTag #'music \voice
  \new Devnull="nowhere" \keepWithTag #'lyricrhythm \voice
  \new Lyrics \lyricsto "nowhere" \lyr
  \new Staff { c'8 c' c' c' c' c' c' c'
  c' c' c' c' c' c' c' c' }
>>
@end lilypond

@ifnothtml
@englishref
@end ifnothtml

@node Spacing out syllables
@unnumberedsubsubsec Spacing out syllables

@cindex espacer des paroles
@cindex paroles, accroître l'espacement

La propriété @code{#'minimum-distance} de l'objet LyricSpace permet
d'accroître l'espacement des paroles.

@lilypond[relative,verbatim,fragment,quote,ragged-right]
{
  c c c c
  \override Lyrics.LyricSpace #'minimum-distance = #1.0
  c c c c
}
\addlyrics {
  longtext longtext longtext longtext
  longtext longtext longtext longtext
}
@end lilypond

Pour que ce réglage s'applique à toute la partition, définissez-le
dans le bloc @code{\layout}.

@lilypond[verbatim,quote,ragged-right]
\score {
  \relative c' {
  c c c c
  c c c c
  }
  \addlyrics {
  longtext longtext longtext longtext
  longtext longtext longtext longtext
  }
  \layout {
    \context {
      \Lyrics
      \override LyricSpace #'minimum-distance = #1.0
    }
  }
}
@end lilypond

@node Centering lyrics between staves
@unnumberedsubsubsec Centering lyrics between staves

@untranslated
@ifnothtml
@englishref
@end ifnothtml


@node Stanzas
@subsection Stanzas

@menu
* Adding stanza numbers::       
* Adding dynamics marks to stanzas::  
* Adding singers' names to stanzas::  
* Stanzas with different rhythms::  
* Printing stanzas at the end::  
* Printing stanzas at the end in multiple columns ::  
@end menu


@node Adding stanza numbers
@unnumberedsubsubsec Adding stanza numbers

@cindex numéro de couplet

On peut ajouter un numéro aux couplets en définissant la variable
@code{stanza} :

@lilypond[quote,ragged-right,verbatim,relative=2,fragment]
\new Voice {
  \time 3/4 g2 e4 a2 f4 g2.
} \addlyrics {
  \set stanza = "1. "
  Hi, my name is Bert.
} \addlyrics {
  \set stanza = "2. "
  Oh, ché -- ri, je t'aime
}
@end lilypond

@noindent
Ces numéros se placeront juste avant le début de la première syllabe.

@node Adding dynamics marks to stanzas
@unnumberedsubsubsec Adding dynamics marks to stanzas

Lorsque des couplets ont des nuances différentes, vous pouvez ajouter
une nuance devant chaque numéro.  L'objet @code{StanzaNumber} contient
tout ce qui se place au début du couplet.  Pour des raisons techniques,
vous devrez définir la variable @code{stanza} en dehors du mode
@code{\lyricmode}.

@lilypond[quote,ragged-right,verbatim]
text = {
  \set stanza = \markup { \dynamic "ff" "1. " }
  \lyricmode {
    Big bang
  }
}

<<
  \new Voice = "tune" {
    \time 3/4
    g'4 c'2
  }
\new Lyrics \lyricsto "tune" \text
>>
@end lilypond

@node Adding singers' names to stanzas
@unnumberedsubsubsec Adding singers' names to stanzas

@cindex nom de personnage
@cindex nom du chanteur

On peut également ajouter le nom de chaque rôle ; ils s'imprimeront au
début de chaque ligne comme les noms d'instruments.  Il faut pour cela
définir @code{vocalName}, et @code{shortVocalName} pour une version
abrégée.

@lilypond[fragment,ragged-right,quote,verbatim,relative=2]
\new Voice {
  \time 3/4 g2 e4 a2 f4 g2.
} \addlyrics {
  \set vocalName = "Bert "
  Hi, my name is Bert.
} \addlyrics {
  \set vocalName = "Ernie "
  Oh, ché -- ri, je t'aime
}
@end lilypond

@node Stanzas with different rhythms
@unnumberedsubsubsec Stanzas with different rhythms

@subsubheading Mélismes dans certaines strophes seulement

Il peut survenir que les paroles comportent un mélisme pour l'un des
couplets, mais plusieurs syllabes pour d'autres. Une solution consiste à
temporairement ignorer les mélismes dans le couplet ayant plus de
syllabes.  Il suffit pour cela de définir la propriété
@code{ignoreMelismata} à l'intérieur du contexte Lyrics.

Petit détail qui a son importance : la définition de
@code{ignoreMelismata} doit intervenir une syllabe @emph{avant} les
syllabes auxquelles elle s'appliquera :

@c  FIXME: breaks compile
@lilypond[verbatim,ragged-right,quote]
%{
<<
  \relative \new Voice = "lahlah" {
    \set Staff.autoBeaming = ##f
    c4
    \slurDotted
    f8.[( g16])
    a4
  }
  \new Lyrics \lyricsto "lahlah" {
    more slow -- ly
  }
  \new Lyrics \lyricsto "lahlah" {
    \set ignoreMelismata = ##t % applies to "fas"
    go fas -- ter
    \unset ignoreMelismata
    still
  }
>>
%}
@end lilypond

Ici la fonction @code{ignoreMelismata} concerne la syllabe @q{fas},
bien qu'elle ait été définie avant la syllabe @q{go}.

L'inverse est aussi possible : prendre une mélodie syllabique pour en
faire un mélisme.  Il faudra alors insérer des sauts invisibles
@code{\skip} dans vos paroles. Chaque @code{\skip} décale le texte
suivant d'une note :

@lilypond[verbatim,ragged-right,quote]
\relative c' { c c g' }
\addlyrics {
  twin -- \skip 4
  kle
}
@end lilypond

@subsubheading Basculer vers une mélodie alternative

On peut créer des variations plus complexes à partir d'une mélodie à
plusieurs voix.  Les paroles peuvent suivre l'une ou l'autre des
lignes mélodiques, et même basculer de l'une à l'autre si l'on
modifie la propriété @code{associatedVoice}.  Dans cet exemple,

@lilypond[ragged-right,quote]
<<
  \relative c' \new Voice = "lahlah" {
    \set Staff.autoBeaming = ##f
    c4
    <<
      \new Voice = "alternative" {
        \voiceOne
        \times 2/3 {
          % show associations clearly.
          \override NoteColumn #'force-hshift = #-3
          f8 f g
        }
      }
      {
        \voiceTwo
        f8.[ g16]
        \oneVoice
      } >>
    a8( b) c
  }
  \new Lyrics \lyricsto "lahlah" {
    Ju -- ras -- sic Park
  }
  \new Lyrics \lyricsto "lahlah" {
    % Tricky: need to set associatedVoice
    % one syllable too soon!
    \set associatedVoice = alternative % applies to "ran"
    Ty --
    ran --
    no --
    \set associatedVoice = lahlah % applies to "rus"
    sau -- rus Rex
  } >>
@end lilypond

@noindent
le texte du premier couplet s'aligne sur la mélodie nommée
@q{lahlah},

@example
\new Lyrics \lyricsto "lahlah" @{
  Ju -- ras -- sic Park
@}
@end example


Le second couplet est tout d'abord rattaché au contexte @code{lahlah},
mais bascule sur une autre mélodie sur la syllabe @q{ran}.  Pour cela,
nous utilisons
@example
\set associatedVoice = alternative
@end example

@noindent
où @code{alternative} désigne le nom du contexte @code{Voice} qui contient
le triolet.

Encore une fois, cette commande doit être spécifiée une syllabe en
avance, c'est-à-dire ici avant la syllabe @q{Ty}.

@example
\new Lyrics \lyricsto "lahlah" @{
  \set associatedVoice = alternative % applies to "ran"
  Ty --
  ran --
  no --
  \set associatedVoice = lahlah % applies to "rus"
  sau -- rus Rex
@}
@end example

@noindent
Comme vous pouvez le voir, nous revenons ensuite à l'alignement sur la
mélodie d'origine, en assignant à la propriété @code{associatedVoice}
la valeur @code{lahlah}.


@node Printing stanzas at the end
@unnumberedsubsubsec Printing stanzas at the end

Il peut parfois s'avérer opportun d'aligner un seul couplet sur la
mélodie, et de présenter tous les autres en bloc à la fin du morceau.
Ces couplets additionnels peuvent être inclus dans une section
@code{\markup} en dehors du bloc @code{\score} principal.
Vous en trouverez un exemple ci-dessous ; notez également les deux
méthodes différentes employées pour indiquer les sauts de ligne,
entre les couplets (@q{verses} en anglais) 2 et 3.

@c keeply?
@lilypond[ragged-right,verbatim,quote]
melody = \relative c' {
e d c d | e e e e |
d d e d | c1 |
}

text = \lyricmode {
\set stanza = "1." Ma- ry had a lit- tle lamb,
its fleece was white as snow.
}

\score{ <<
  \new Voice = "one" { \melody }
  \new Lyrics \lyricsto "one" \text
>>
  \layout { }
}
\markup { \column{
  \line{ Verse 2. }
  \line{ All the children laughed and played }
  \line{ To see a lamb at school. }
  }
}
\markup{
  \wordwrap-string #"
  Verse 3.

  Mary took it home again,

  It was against the rule."
}
@end lilypond

@node Printing stanzas at the end in multiple columns 
@unnumberedsubsubsec Printing stanzas at the end in multiple columns

Si les couplets sont vraiment nombreux, il est possible de les imprimer
sur plusieurs colonnes.  De plus, l'exemple suivant vous montrera
comment faire en sorte que le numéro du couplet soit en retrait à
gauche, comme c'est traditionnellement le cas.

@c keeply?
@lilypond[ragged-right,quote,verbatim]
melody = \relative c' {
  c c c c | d d d d
}
 
text = \lyricmode {
  \set stanza = "1." This is verse one.
  It has two lines.
}

\score{ <<
    \new Voice = "one" { \melody }
    \new Lyrics \lyricsto "one" \text
   >>
  \layout { }
}

\markup {
  \fill-line {
    \hspace #0.1 % moves the column off the left margin; can be removed if
        % space on the page is tight
     \column {
      \line { \bold "2."
        \column {
          "This is verse two."
          "It has two lines."
        }
      }
      \hspace #0.1 % adds vertical spacing between verses
      \line { \bold "3."
        \column {
          "This is verse three."
          "It has two lines."
        }
      }
    }
    \hspace #0.1  % adds horizontal spacing between columns; if they are
        % still too close, add more " " pairs until the result 
        % looks good
     \column {
      \line { \bold "4."
        \column {
          "This is verse four."
          "It has two lines."
        }
      }
      \hspace #0.1 % adds vertical spacing between verses
      \line { \bold "5."
        \column {
          "This is verse five."
          "It has two lines."
        }
      }
    }
  \hspace #0.1 % gives some extra space on the right margin; can
      % be removed if page space is tight
  }
}
@end lilypond


@seealso

Référence du programme : @rinternals{LyricText},
@rinternals{StanzaNumber}.

