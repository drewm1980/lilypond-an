@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-
@c This file is part of lilypond.tely
@ignore
    Translation of GIT committish: bdf8540b74167817eab96ed3d13b35477217f9fe

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c \version "2.11.61"

@c Translators: Valentin Villenave
@c Translation checkers: Jean-Charles Malahieude, John Mandereau

@node Fretted string instruments
@section Fretted string instruments

@untranslated

@menu
* Common notation for fretted strings::
* Guitar::
* Banjo::
@end menu

@node Common notation for fretted strings
@subsection Common notation for fretted strings

@untranslated

@menu
* References for fretted strings::
* String number indications::
* Default tablatures::
* Custom tablatures::
* Fret diagram markups::
* Right-hand fingerings::
@end menu

@node References for fretted strings
@unnumberedsubsubsec References for fretted strings

@untranslated

@node String number indications
@unnumberedsubsubsec String number indications

@cindex cordes numérotées
@cindex numéro de corde

On peut ajouter aux accords les numéros de cordes, en les indiquant avec
@code{\}@var{number} :

@lilypond[relative,relative=1,ragged-right,fragment]
<c\1 e\2 g\3>
@end lilypond

@seealso

Référence du programme : @rinternals{StringNumber}.

Exemples : @rlsr{Fretted strings}.

@node Default tablatures
@unnumberedsubsubsec Default tablatures

@cindex tablatures de base

La notation en tablature est utilisée pour certains instruments à cordes
pincées.  Les hauteurs n'y sont pas indisuées par des têtes de note,
mais par des chiffres qui indiquent sur quelle corde, et à quelle case
chaque note doit être jouée.  Dans certaines limites, LilyPond vous
permet d'écrire des tablatures.

Chaque numéro de corde associé à une note doit être précédé d'une barre
oblique inverse (ou @qq{antislash}). Ainsi, @code{c4\3} donnera un do
noire à jouer sur la troisième corde.  Par défaut, la première corde est
la plus aigüe, et les cordes suivent l'accord traditionnel d'une guitare
à six cordes.  Les notes sont imprimées sous forme de tablature, dans
les contextes @rinternals{TabStaff} et @rinternals{TabVoice}.

@lilypond[quote,ragged-right,fragment,verbatim]
\new TabStaff {
  a,4\5 c'\2 a\3 e'\1
  e\4 c'\2 a\3 e'\1
}
@end lilypond

@funindex minimumFret
@cindex cases

Quand aucune corde n'est précisée, LilyPond choisit automatiquement la
corde où la position est la moins élevée et qui donne un numéro de case
supérieur à la valeur de la propriété @code{minimumFret}.  On peut
régler cette propriété, selon qu'on désire une position plus ou moins
haute.  La valeur par défaut de cette propriété est fixée à 0, ce qui
correspond à la position la plus basse.

@example
e16 fis gis a b4
\set TabStaff.minimumFret = #8
e16 fis gis a b4
@end example
@lilypond[quote,ragged-right]
frag = {
  \key e \major
  e16 fis gis a b4
  \set TabStaff.minimumFret = #8
  e16 fis gis a b4
}
  \new StaffGroup <<
    \new Staff { \clef "G_8" \frag }
    \new TabStaff { \frag }
  >>
@end lilypond

@commonprop

Pour obtenir des tablatures où les hampes seront dirigées vers le bas et
les ligatures horizontales, réglez le contexte @code{TabStaff}
comme suit :

@example
\stemDown
\override Beam #'damping = #100000
@end example

@seealso

Référence du programme : @rinternals{TabStaff}, @rinternals{TabVoice}.

@knownissues

Les accords ne subsissent ausun traitement particulier ; de ce fait, la
sélection automatique des cordes peut attribuer une même corde pour deux
notes différentes de l'accord.

Afin que @code{\partcombine} fonctionne avec des tablatures, on doit
ajouter au contexte @code{TabStaff} des voix fantômes :

@lilypond[quote,ragged-right,verbatim]
melodia = \partcombine { e4 g g g }{ e4 e e e }
<<
  \new TabStaff <<
    \new TabVoice = "one" s1
    \new TabVoice = "two" s1
    \new TabVoice = "shared" s1
    \new TabVoice = "solo" s1
    { \melodia }
  >>
>>
@end lilypond

@node Custom tablatures
@unnumberedsubsubsec Custom tablatures

@cindex tablatures, autres

Vous pouvez bien sûr accorder vos cordes différemment.  Cet accord est
enregistré dans la propriété @code{stringTunings}.  La valeur de cette
propriété doit être indiquée sous forme d'une liste en langage Scheme,
où chaque corde est représentée par un nombre entier qui indique sa
hauteur à vide, comptée en demi-tons à partir du do central.  Cette
propriété permet aussi à LilyPond de déterminer le nombre de cordes.

Dans l'exemple suivant, on a réglé @code{stringTunings} pour l'accord de
la guitare basse, c'est-à-dire mi la ré sol.

@lilypond[quote,ragged-right,fragment,verbatim]
\new TabStaff <<
  \set TabStaff.stringTunings = #'(-5 -10 -15 -20)
  {
    a,4 c' a e' e c' a e'
  }
>>
@end lilypond

Toutefois, LilyPond possède des jeux de cordes prédéfinis pour le banjo,
la mandoline, la guitare et la guitare basse ; ainsi, l'accord précédent
peut également s'indiquer par

@example
\set TabStaff.stringTunings = #bass-tuning
@end example

Le jeu par défaut est celui de la guitare : @code{guitar-tuning},
c'est-à-dire le célèbre mi la ré sol si mi. D'autres jeux prédéfinis
sont @code{guitar-open-g-tuning}, @code{mandolin-tuning} et
@code{banjo-open-g-tuning}.

@seealso

Vous trouverez une liste complète des jeux prédéfinis dans le fichier
@file{scm/@/output@/-lib@/.scm}.

Référence du programme : @rinternals{Tab_note_heads_engraver}.

@knownissues

Aucun effet spécial de guitare n'a été implémenté à ce jour.

@node Fret diagram markups
@unnumberedsubsubsec Fret diagram markups

@cindex schémas d'accords
@cindex schémas de barrés

On peut ajouter des diagrammes d'accords au-dessus de n'importe quelle
note, en tant qu'objets @code{\markup}. Ces objets donnent toutes
les informations sur le doigté et les éventuels barrés :

@lilypond[verbatim, ragged-right, quote]
\new Voice {
  d'^\markup \fret-diagram #"6-x;5-x;4-o;3-2;2-3;1-2;"
  d' d' d'
  fis'^\markup \override #'(size . 0.75) {
    \override #'(finger-code . below-string) {
      \fret-diagram-verbose #'((place-fret 6 2 1) (barre 6 1 2)
                               (place-fret 5 4 3) (place-fret 4 4 4)
                               (place-fret 3 3 2) (place-fret 2 2 1)
                               (place-fret 1 2 1))
    }
  }
  fis' fis' fis'
  c'^\markup \override #'(dot-radius . 0.35) {
    \override #'(finger-code . in-dot) {
      \override #'(dot-color . white) {
        \fret-diagram-terse #"x;3-1-(;5-2;5-3;5-4;3-1-);"
      }
    }
  }
  c' c' c'
}
@end lilypond

Vous pouvez indiquer vos diagrammes de trois manières différentes :
@qq{standard}, @qq{terse} ou @qq{verbeux}. Ces trois interfaces
produisent des schémas similaires, mais demandent d'entrer plus ou moins
d'informations.  Vous trouverez tout les détails dans
@ref{Text markup commands}.

Par ailleurs, plusieurs propriétés permettent d'ajuster le graphisme
à votre convenance. Vous en trouverez les détails dans
@rinternals{fret-diagram-interface}.

@seealso

Exemples : @rlsr{Fretted strings}.

@node Right-hand fingerings
@unnumberedsubsubsec Right-hand fingerings

Les doigtés de la main droite, dans les accords, peuvent être ajoutés au moyen
de @code{@var{note}-\rightHandFinger @var{doigté}}

@lilypond[verbatim,fragment,relative=2]
  <c-\rightHandFinger #1 e-\rightHandFinger #2 >
@end lilypond

Pour plus de clarté, vous pouvez traduire ou abréger la commande
@code{\rightHandFinger}, par exemple en @code{\doigtMainDroite} ou
même @code{\MD} :

@example
#(define MD rightHandFinger)
@end example

@cindex doigtés, main droite, guitare
@cindex mains droite, doigtés guitare

@commonprop

Pour contrôler plus précisément les doigtés de main droite, réglez la
propriété @code{strokeFingerOrientations} :

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
#(define RH rightHandFinger)
{
  \set strokeFingerOrientations = #'(up down)
  <c-\RH #1 es-\RH #2 g-\RH #4 > 4
  \set strokeFingerOrientations = #'(up right down)
  <c-\RH #1 es-\RH #2 g-\RH #4 > 4
}
@end lilypond

Les lettres utilisées dans ces doigtés sont définies par la propriété
@code{digit-names}, mais on peut bien sûr les changer en utilisant une
chaîne de caractères comme argument de @code{\rightHandFinger}.

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
#(define RH rightHandFinger)
{
  \set strokeFingerOrientations = #'(right)
  \override StrokeFinger #'digit-names = #'#("x" "y" "z" "!" "@")
  <c-\RH #5 >4
  <c-\RH "@">4
}
@end lilypond

@seealso

Référence du programme : @rinternals{StrokeFinger}

@node Guitar
@subsection Guitar

@untranslated

@menu
* Indicating position and barring::
* Indicating harmonics and dampened notes::  
@end menu

@node Indicating position and barring
@unnumberedsubsubsec Indicating position and barring

Les doigtés de la main droite, dans les accords, peuvent être ajoutés au moyen
de @code{@var{note}-\rightHandFinger @var{doigté}}

@lilypond[verbatim,fragment,relative=2]
  <c-\rightHandFinger #1 e-\rightHandFinger #2 >
@end lilypond

Pour plus de clarté, vous pouvez traduire ou abréger la commande
@code{\rightHandFinger}, par exemple en @code{\doigtMainDroite} ou
même @code{\MD} :

@example
#(define MD rightHandFinger)
@end example

@cindex doigtés, main droite, guitare
@cindex mains droite, doigtés guitare

@commonprop

Pour contrôler plus précisément les doigtés de main droite, réglez la
propriété @code{strokeFingerOrientations} :

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
#(define RH rightHandFinger)
{
  \set strokeFingerOrientations = #'(up down)
  <c-\RH #1 es-\RH #2 g-\RH #4 > 4
  \set strokeFingerOrientations = #'(up right down)
  <c-\RH #1 es-\RH #2 g-\RH #4 > 4
}
@end lilypond

Les lettres utilisées dans ces doigtés sont définies par la propriété
@code{digit-names}, mais on peut bien sûr les changer en utilisant une
chaîne de caractères comme argument de @code{\rightHandFinger}.

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
#(define RH rightHandFinger)
{
  \set strokeFingerOrientations = #'(right)
  \override StrokeFinger #'digit-names = #'#("x" "y" "z" "!" "@")
  <c-\RH #5 >4
  <c-\RH "@">4
}
@end lilypond

@seealso

Référence du programme : @rinternals{StrokeFinger}

@node Indicating harmonics and dampened notes
@unnumberedsubsubsec Indicating harmonics and dampened notes

@untranslated

@node Banjo
@subsection Banjo

@untranslated

@menu
* Banjo tablatures::
@end menu

@node Banjo tablatures
@unnumberedsubsubsec Banjo tablatures

@cindex Tablatures de banjo

LilyPond permet d'écrire des tablatures de base pour le banjo à cinq
cordes.  Pour ce faire, pensez à utiliser le format de tablature pour
banjo, afin d'avoir le bon nombre de cordes et le bon accord :

@lilypond[quote,ragged-right,fragment,verbatim]
\new TabStaff <<
  \set TabStaff.tablatureFormat = #fret-number-tablature-format-banjo
  \set TabStaff.stringTunings = #banjo-open-g-tuning
  {
    \stemDown
    g8 d' g'\5 a b g e d' |
    g4 d''8\5 b' a'\2 g'\5 e'\2 d' |
    g4
  }
>>
@end lilypond

LilyPond connaît un certain nombre de manières d'accorder un banjo :
@code{banjo-c-tuning} (sol do sol si ré),
@code{banjo-modal-tuning} (sol ré sol do ré),
@code{banjo-open-d-tuning} (la ré fa-dièse la ré)
et @code{banjo-open-dm-tuning} (la ré fa la ré).

Tous ces accords peuvent être convertis en accords pour banjo à quatre
cordes, si l'on utilise la fonction @code{four-string-banjo} :

@example
\set TabStaff.stringTunings = #(four-string-banjo banjo-c-tuning)
@end example

@seealso

Vous trouverez une liste complète des jeux de cordes prédéfinis pour le banjo
dans le fichier @file{scm/@/output@/-lib@/.scm}.
