@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-

@ignore
    Translation of GIT committish: 54687441dde2fe248e20989bd265a274583413a8

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c \version "2.12.0"

@c Translators: Valentin Villenave, Jean-Charles Malahieude
@c Translation checkers: Jean-Charles Malahieude, Jean-Jacques Gerbaud 

@node Musique vocale
@section Musique vocale
@translationof Vocal music

@c TODO: inspirational headword

Ce chapitre traite de la musique vocale : comment la saisir et comment
s'assurer que les paroles s'alignent avec les notes de la mélodie
correspondante.

@menu
* Vue d'ensemble de la musique vocale::
* Saisie des paroles::
* Alignement des paroles sur une mélodie::
* Situations particulères en matière de paroles::
* Couplets::
@end menu


@node Vue d'ensemble de la musique vocale
@subsection Vue d'ensemble de la musique vocale
@translationof Common notation for vocal music

En complément de généralités, ce sous-chapitre aborde quelques styles
particuliers en terme de musique vocale.

@menu
* Références en matière de musique vocale::
* Opéra::
* Cahier de chants::
* Musique parlée::
* Chants::
* Musique vocale ancienne::
@end menu

@node Références en matière de musique vocale
@unnumberedsubsubsec Références en matière de musique vocale
@translationof References for vocal music and lyrics

@c TODO: split this section in two parts? -vv

Graver de la musique vocale soulève plusieurs problèmes ; ils
sont abordés soit dans ce chapitre, soit dans d'autres parties de la
documentation de LilyPond.

@itemize
@item
La plupart du temps, les paroles ne sont constituées que de texte
simple.  Cette forme de notation est abordée dans
@rlearning{Écriture de chants simples}.

@item
La musique vocale nécessite souvent de recourir au mode @code{markup},
aussi bien pour des paroles que pour d'autres éléments textuels comme le
nom des personnages.  Cette syntaxe est expliquée dans
@ref{Introduction au formatage de texte}.

@item
Une feuille de chant s'obtient en combinant une partie vocale et des
accords.  La syntaxe appropriée à ces derniers est abordée dans
@ref{Notation des accords}.

@item
L'impression d'un @emph{ambitus} -- ou tessiture -- que l'on trouve en
tête de certaines partitions, est abordée dans @ref{Ambitus}.

@item
L'utilisation de clefs traditionnelles est abordée dans
@ref{Clefs}.

@item
LilyPond sait reproduire les usages historiques, comme l'explique
@ref{Notations anciennes}.
@end itemize


@node Opéra
@unnumberedsubsubsec Opéra
@translationof Opera

@c TODO
@i{En cours de rédaction.}

@c add characters names snippet -vv

@node Cahier de chants
@unnumberedsubsubsec Cahier de chants
@translationof Song books

@c TODO
@i{En cours de rédaction.}

@snippets
@lilypondfile[verbatim,lilyquote,ragged-right,texidoc,doctitle]
{simple-lead-sheet.ly}


@seealso
Manuel de notation :
@ref{Notation des accords}.


@node Musique parlée
@unnumberedsubsubsec Musique parlée
@translationof Spoken music

@cindex parlato
@cindex Sprechgesang

Le @emph{parlato} -- ou @emph{Sprechgesang} pour les germanistes -- est
du texte scandé en rythme, mais sans hauteurs définies ; il est indiqué
par des notes en croix, à l'instar des percussions -- voir
@ref{Têtes de note spécifiques}.

@c TODO add "marking-notes-on-spoken-parts" snippet -vv
@c add "showing the rhythm of a melody" snip
@c add "one staff-line notation"
@c add "improvisation" ref
@c add "lyrics independents of notes" ref

@node Chants
@unnumberedsubsubsec Chants
@translationof Chants

@c TODO Add text from lsr and -user
@i{En cours de rédaction.}

@node Musique vocale ancienne
@unnumberedsubsubsec Musique vocale ancienne
@translationof Ancient vocal music

@c TODO Add text from lsr and -user
@i{En cours de rédaction.}

@c Add "Printing both the ancient and the modern clef in vocal music" snippet,
@c and "Transcription of Ancient music with incipit" snippet. -vv


@seealso
Manuel de notation :
@ref{Notations anciennes}.


@node Saisie des paroles
@subsection Saisie des paroles
@translationof Entering lyrics

@c TODO add one sentence here. -vv

@menu
* Tout savoir sur les paroles::
* Écriture de chants simples::
* Travail avec des paroles et variables::
@end menu


@node Tout savoir sur les paroles
@unnumberedsubsubsec Tout savoir sur les paroles
@translationof Lyrics explained

@cindex paroles
@cindex ponctuation
@cindex espaces, dans les paroles
@cindex guillemets, dans les paroles

@funindex \lyricmode

@c FIXME: this section is to be rewritten.
Le fait que LilyPond travaille sur des fichiers textuels nous amène au
constat suivant : les paroles ne doivent pas être interprétées comme des
notes -- le caractère@tie{}@code{a} ne saurait être confondu avec la
note@tie{}@code{a} (un @emph{la} pour les non latinistes).  C'est la
raison pour laquelle nous utiliserons un mode dédié.

Il existe un mode de saisie spécialement adapté aux paroles.  On
l'introduit avec le mot-clé @code{\lyricmode}, ou en utilisant
@code{\addlyrics} ou @code{\lyricsto}.  Ce mode vous permet de saisir
des paroles, ainsi que leur ponctuation, de telle sorte que le
caractère@tie{}@code{a} ne sera plus interprété comme une note, mais
comme une syllabe.  Les syllabes sont saisies comme des notes, mais les
hauteurs sont alors remplacées par du texte.  Exemple avec une comptine
anglaise :

@example
\lyricmode @{ Twin-4 kle4 twin- kle litt- le star2 @}
@end example

Il y a deux manières principales de préciser la place exacte des
syllabes : soit en spécifiant explicitement la durée de chaque syllabe
-- comme dans l'exemple ci-dessus -- soit en alignant automatiquement
les paroles sur les notes d'une mélodie ou d'une voix en utilisant
@code{\addlyrics} ou @code{\lyricsto}.  
@c  TODO: broken but exists Aligning lyrics
@c For more details see @ref{Alignement des contextes}.

Dans les paroles, un mot ou une syllabe commence par une lettre de
l'alphabet, et se termine par une espace.  Toute syllabe doit donc être
séparée d'une autre par une espace, tout autre caractère -- chiffre ou
ponctiuation -- étant considéré comme partie intégrante de cette même
syllabe.  L'exemple suivant comporte une faute de frappe évidente :

@example
\lyricmode @{ lah- lah@}
@end example

@noindent
la dernière syllabe contient une @code{@}} ; il y a de fait un défaut de
parité avec l'accolade ouvrante, et la compilation échouera fort
probablement.


@funindex \property en mode \lyricmode

@noindent
De la même manière, un point concluant une suite de lettres sera
partie intégrante de la chaîne résultante.  Par conséquent, il est
impératif d'insérer des espaces lorsque vous modifiez les propriétés
d'une commande.  En d'autres termes, @strong{ne saisissez pas}

@example
\override Score.LyricText #'font-shape = #'italic
@end example

@noindent
mais plutôt

@example
\override Score . LyricText #'font-shape = #'italic
@end example

@cindex espaces, dans les paroles
@cindex guillemets, dans les paroles
@cindex liaisons, dans les paroles

@funindex _

Pour attribuer plus d'une syllabe à une même note, vous pouvez mettre
ces syllabes entre guillemets, ou bien remplacer l'espace par un
caractère souligné (@code{_}), ou encore utiliser un tilde (@code{~})
pour obtenir une liaison entre les syllabes.

@lilypond[quote,ragged-right,fragment,verbatim]
\time 3/4
\relative c' { c2 e4 g2 e4 }
\addlyrics { gran- de_a- mi- go }
\addlyrics { pu- "ro y ho-" nes- to }
\addlyrics { pu- ro~y~ho- nes- to }
@end lilypond

@noindent
Cette liaison adaptée aux paroles correspond au caractère Unicode
@code{U+203F}, et n'apparaîtra dans la partition que s'il existe une
police incluant ce symbole (par exemple DejaVuLGC) installée sur le
système.  De plus amples informations concernant les fontes textuelles
ou non sont disponibles au chapitre @ref{Fontes}.


Pour utiliser des lettres accentuées ou des caractères spéciaux
-- cœurs ou guillemets inversés par exemple -- il suffit de les insérer
dans le fichier et de veiller à le sauvegarder avec le codage UTF-8.
Voir à ce sujet @ref{Codage du texte} pour plus de détails.

@lilypond[quote,ragged-right,fragment,verbatim]
\relative c' { e4 f e d e f e2 }
\addlyrics { He said: “Let my peo ple go”. }
@end lilypond

Pour utiliser des guillemets informatiques standard, faites-les
précéder d'une barre oblique inverse :

@lilypond[quote,ragged-right,fragment,verbatim]
\relative c' { \time 3/4 e4 e4. e8 d4 e d c2. }
\addlyrics { "\"I" am so lone- "ly\"" said she }
@end lilypond

Expliquer exactement comment LilyPond repère le début d'un mot en mode
paroles (@emph{Lyrics}) est quelque peu compliqué.

En mode @emph{Lyrics}, un mot peut commencer par : tout caractère
alphabétique, @code{_}, @code{?}, @code{!}, @code{:}, @code{'}, un des
codes de contrôle @code{^A} à @code{^F} et @code{^Q} à @code{^W},
@code{^Y}, @code{^^}, tout caractère ASCII de code strictement supérieur
à 127, ou enfin l'un des symboles @code{`}, @code{'}, @code{"}, ou
@code{^}, s'il est précédé d'une barre oblique inverse.

@c " to balance double quotes for not-so-bright context-sensitive editors

Pour définir un identificateur contenant des paroles, il faut utiliser
la fonction @code{lyricmode}.

@example
verseOne = \lyricmode @{ Joy to the world the Lord is come @}
\score @{
  <<
    \new Voice = "one" \relative c'' @{
      \autoBeamOff
      \time 2/4
      c4 b8. a16 g4. f8 e4 d c2
    @}
    \addlyrics @{ \verseOne @}
  >>
@}
@end example


@seealso
Manuel de notation :
@ref{Fontes}.

Référence des propriétés internes :
@rinternals{LyricText},
@rinternals{LyricSpace}.


@c FIXME: this title has to be changed (possible confusion with LM) -vv
@node Écriture de chants simples
@unnumberedsubsubsec Écriture de chants simples
@translationof Setting simple songs

@cindex \addlyrics

Le plus simple pour ajouter des paroles à une mélodie est d'adjoindre

@example
\addlyrics @{ @var{les paroles} @}
@end example

@noindent
à la mélodie.  En voici un exemple :

@lilypond[ragged-right,verbatim,fragment,quote]
\time 3/4
\relative { c2 e4 g2. }
\addlyrics { play the game }
@end lilypond

On peut ajouter davantage de couplets en multipliant le nombre de
sections @code{\addlyrics}.

@lilypond[ragged-right,verbatim,fragment,quote]
\time 3/4
\relative { c2 e4 g2. }
\addlyrics { play the game }
\addlyrics { speel het spel }
\addlyrics { joue le jeu }
@end lilypond

Cependant, la commande @code{\addlyrics} ne peut pas gérer les
constructions polyphoniques.  Dans ce cas, mieux vaut employer
@code{\lyricsto} et @code{\lyricmode}, comme nous le verrons dans
@ref{Tout savoir sur les paroles}.


@c TODO: one additional section may be needed here,
@c such as "advanced lyric syntax" or whatever -vv

@node Travail avec des paroles et variables
@unnumberedsubsubsec Travail avec des paroles et variables
@translationof Working with lyrics and variables

@cindex paroles, variables
@cindex paroles, identificateurs

La fonction @code{\lyricmode} permet de définir une variable pour
les paroles.  Point n'est besoin de spécifier les durées si vous
utilisez @code{\addlyrics} ou @code{\lyricsto} lorsque vous y faites
référence.

@example
verseOne = \lyricmode @{ Joy to the world the Lord is come @}
\score @{
 <<
   \new Voice = "one" \relative c'' @{
     \autoBeamOff
     \time 2/4
     c4 b8. a16 g4. f8 e4 d c2
   @}
   \addlyrics @{ \verseOne @}
 >>
@}
@end example

Pour une organisation différente ou plus complexe, mieux vaut
commencer par définir la hiérarchie des portées et des paroles,

@example
\new ChoirStaff <<
  \new Voice = "soprano" @{ @emph{musique} @}
  \new Lyrics = "sopranoParoles" @{ s1 @}
  \new Lyrics = "tenorParoles" @{ s1 @}
  \new Voice = "tenor" @{ @emph{musique} @}
>>
@end example

@noindent
puis combiner correctement mélodies et paroles :

@example
\context Lyrics = sopranoParoles \lyricsto "soprano"
@emph{les paroles}
@end example

@noindent
Le résultat final ressemblera à

@example
<<\new ChoirStaff << @emph{définition de la musique} >>
 \lyricsto "soprano" @emph{etc.}
 \lyricsto "alto" @emph{etc.}
@emph{etc.}
>>
@end example


@seealso
@c TODO: document \new Staff << Voice \lyricsto >> bug
Référence des propriétés internes :
@rinternals{LyricCombineMusic},
@rinternals{Lyrics}.


@node Alignement des paroles sur une mélodie
@subsection Alignement des paroles sur une mélodie
@translationof Aligning lyrics to a melody

@funindex \lyricmode
@funindex \addlyrics
@funindex \lyricsto

@c FIXME: this stuff is to be rewritten. -vv
Les paroles s'alignent par rapport à une mélodie soit de manière
automatique, soit manuellement dès lors que vous aurez spécifié la durée
de chaque syllabe.  Vous pouvez y adjoindre des blancs, des traits
d'union ou des lignes de prolongation.

Avant d'être imprimées, les paroles sont interprétées par le programme
dans le contexte @code{Lyrics}.

@example
\new Lyrics \lyricmode @dots{}
@end example

Il y a deux grandes méthodes pour gérer le positionnement horizontal des
syllabes :

@itemize
@item
en alignant automatiquement les paroles sur une mélodie ou une autre
voix, en ayant recours à @code{\addlyrics} ou @code{\lyricsto} ;

@item
en affectant explicitement à chaque syllabe une durée, au sein du
contexte @code{\lyricmode}
@end itemize

Le contexte @code{Voice} qui contient la mélodie sur laquelle doivent
s'aligner les paroles doit demeurer actif, au risque de perdre les
paroles qui suivent.  C'est le cas lorsque la voix en question est
muette pendant un moment.  La manière de garder un contexte actif est
abordée plus en détail au chapitre @ref{Conservation d'un contexte}.


@menu
* Durée automatique des syllabes::
* Durée explicite des syllabes::
* Plusieurs syllabes sur une note::
* Plusieurs notes pour une même syllabe::
* Saut de notes::
* Traits d'union et de prolongation::
* Paroles et reprises::
@end menu

@node Durée automatique des syllabes
@unnumberedsubsubsec Durée automatique des syllabes
@translationof Automatic syllable durations

@cindex durée automatique des syllabes
@cindex paroles et mélodies

Les paroles peuvent être automatiquement alignées sous
une mélodie.  Il suffit pour cela de combiner la mélodie et les
paroles avec la commande @code{\lyricsto}.

@example
\new Lyrics \lyricsto @var{nom} @dots{}
@end example

@noindent
Cette commande adapte les paroles aux notes de la voix (contexte
@code{Voice} dans le jargon LilyPond) @var{nom}.  Ce contexte
@code{Voice} doit exister avant l'indication des paroles avec
@code{\lyricsto}.  La commande @code{\lyricsto} introduit
automatiquement le mode @code{\lyricmode} ; il n'est alors pas
nécessaire de rajouter @code{\lyricmode}.

L'exemple suivant récapitule les différentes manières de saisir des paroles.

@lilypond[quote,fragment,ragged-right,verbatim]
<<
  \new Voice = "one" \relative c'' {
    \autoBeamOff
    \time 2/4
    c4 b8. a16 g4. f8 e4 d c2
  }

% not recommended: left-aligned syllables
  \new Lyrics \lyricmode { Joy4 to8. the16 world!4. the8 Lord4 is come.2 }

% wrong: durations needed
  \new Lyrics \lyricmode { Joy to the earth! the Sa -- viour reigns. }

%correct
  \new Lyrics \lyricsto "one" { No more let sins and sor -- rows grow. }
>>
@end lilypond

Le deuxième couplet n'est pas correctement disposé, aucune durée
n'ayant été spécifiée.  Dans un tel cas, il aurait mieux valu utiliser
@code{\lyricsto}, comme dans le troisième couplet.

La commande @code{\addlyrics} n'est en fait qu'une manière plus aisée
d'écrire de la musique vocale dans une structure Lilypond plus complexe.

@example
@{ MUSIQUE @}
\addlyrics @{ PAROLES @}
@end example

@noindent
est exactement la même chose que

@example
\new Voice = "blah" @{ musique @}
\new Lyrics \lyricsto "blah" @{ PAROLES @}
@end example

@node Durée explicite des syllabes
@unnumberedsubsubsec Durée explicite des syllabes
@translationof Manual syllable durations

On peut aussi se passer de @code{\addlyrics} et de @code{\lyricsto} pour
saisir des paroles.  Dans ce cas, les syllabes sont entrées comme des
notes -- du texte remplaçant les hauteurs -- ce qui veut dire que vous
devez définir leur durée explicitement :

@example
play2 the4 game2.
sink2 or4 swim2.
@end example

La mélodie associée à ces paroles peut être spécifiée par la propriété
@code{associatedVoice} :

@example
\set associatedVoice = #"lala"
@end example

@noindent
La valeur que vous attribuez à cette propriété (ici @code{"lala"})
doit désigner un contexte @code{Voice}, sans quoi les mélismes
ne seront pas imprimés correctement.

Voici un exemple de cette manière de procéder :

@lilypond[relative=1,ragged-right,verbatim,fragment,quote]
<< \new Voice = "melody" {
    \time 3/4
    c2 e4 g2.
 }
 \new Lyrics \lyricmode {
   \set associatedVoice = #"melody"
   play2 the4 game2.
 } >>
@end lilypond


@seealso
Manuel de notation :
@ref{Conservation d'un contexte}.

Référence des propriétés internes :
@rinternals{Lyrics},
@rinternals{Voice}.


@node Plusieurs syllabes sur une note
@unnumberedsubsubsec Plusieurs syllabes sur une note
@translationof Multiple syllables to one note

@funindex _
@cindex liaisons, dans les paroles

Pour attribuer plus d'une syllabe à une même note, vous pouvez soit les
mettre entre guillemets, soit utiliser le caractère souligné
(@code{_}) pour obtenir une espace, ou bien encore utiliser un tilde
(@code{~}) pour obtenir une liaison entre les syllabes@footnote{Une
liaison adaptée aux paroles correspond au caractère Unicode
@code{U+203F}, et n'apparaîtra dans la partition que si le système
dispose d'une police installée qui contient ce symbole (par exemple
DejaVuLGC).}.

@lilypond[quote,ragged-right,fragment,verbatim]
\time 3/4
\relative c' { c2 e4 g2 e4 }
\addlyrics { gran- de_a- mi- go }
\addlyrics { pu- "ro y ho-" nes- to }
\addlyrics { pu- ro~y~ho- nes- to }
@end lilypond


@seealso
Référence des propriétés internes :
@rinternals{LyricCombineMusic}.


@c Here come the section which used to be "Melismata"
@c the new title might be more self-explanatory


@node Plusieurs notes pour une même syllabe
@unnumberedsubsubsec Plusieurs notes pour une même syllabe
@translationof Multiple notes to one syllable

@cindex mélisme
@cindex vocalise
@cindex phrasé, pour des paroles


Parfois, tout particulièrement dans la musique médiévale, plusieurs
notes correspondent à une même syllabe.  Ces vocalises sont appelées
mélismes.

@c this method seems to be the simplest; therefore
@c it might be better to present it first - vv

Il est possible d'indiquer tous les mélismes lors de la saisie des
paroles. Il suffit pour cela d'utiliser le caractère @code{_} pour
chaque note du mélisme.

@c FIXME: clarify: __ is used to crate a lyric extender,
@c _ is used to add a note to a melisma, so both __ and _ are needed.

@c verbose! --FV
@c duplicated: TODO fix
Vous pouvez aussi indiquer les mélismes par des lignes d'extension,
indiquées par un double caractère souligné à la suite de la syllabe qui
se prolonge.  L'exemple qui suit utilise trois éléments distincts --
notez bien les espaces qui les encadrent -- : un double tiret pour
séparer les syllabes d'un même mot, des soulignés pour ajouter des notes
à la vocalise, et un double souligné pour la prolongation.

@c wrong: extender line only on last syllable of a word. Change example
@lilypond[relative=1,verbatim,fragment,quote]
{ \set melismaBusyProperties = #'()
 c d( e) f f( e) e e  }
\addlyrics
 { Ky -- _ _ ri __ _ _ _  e }
@end lilypond

En définissant, comme dans l'exemple ci-dessus, la propriété
@code{melismaBusyProperties}, vous obtiendrez automatiquement toutes
les liaisons de tenue et de phrasé requises.

D'autre part, la commande @code{\lyricsto} arrive aussi à détecter
automatiquement les mélismes : une seule syllabe sera placée sous un
groupe de notes comprenant des liaisons de tenue ou de phrasé.  Au cas
où un mélisme doit s'appliquer à des notes non liées, il suffit
d'adjoindre @code{\melisma} après la première note du groupe, et 
@code{\melismaEnd} après la dernière :

@lilypond[quote,relative=2,ragged-right,fragment,verbatim]
<<
  \new Voice = "lala" {
    \time 3/4
    f4 g8
    \melisma
    f e f
    \melismaEnd
    e2
  }
  \new Lyrics \lyricsto "lala" {
    la di __ daah
  }
>>
@end lilypond

Enfin, lorsque la fonction de ligature automatique (cf.
@ref{Définition des règles de ligature automatique}) est désactivée, le
fait de connecter des notes manuellement créera un mélisme.

@lilypond[quote,relative=2,ragged-right,fragment,verbatim]
<<
  \new Voice = "lala" {
    \time 3/4
    \autoBeamOff
    f4 g8[ f e f]
    e2
  }
  \new Lyrics \lyricsto "lala" {
    la di __ daah
  }
>>
@end lilypond

@c FIXME: this now links to LM -vv
@cindex SATB
@cindex choral score

Vous trouverez un exemple complet de partition pour chœur dans la
section @rlearning{Ensemble vocal}.


@predefined
@funindex \melisma
@code{\melisma},
@funindex \melismaEnd
@code{\melismaEnd}.
@endpredefined


@seealso
Morceaux choisis :
@rlsr{Vocal music}.


@knownissues

Certains mélismes ne sont pas détectés automatiquement ; vous devrez
alors prolonger vous-même les syllabes concernées.

@node Saut de notes
@unnumberedsubsubsec Saut de notes
@translationof Skipping notes

Pour que le texte aille moins vite que la musique, il suffit d'insérer
des blancs, à l'aide de la commande @code{\skip} dans les paroles.
Chaque @code{\skip} décalera la syllabe d'une note.  Ce @code{\skip}
doit comporter une durée quelle qu'elle soit -- elle sera toujours
ignorée en mode @code{Lyrics}.

@lilypond[verbatim,ragged-right,quote]
\relative c' { c c g' }
\addlyrics {
  twin -- \skip 4
  kle
}
@end lilypond

Dans le cas où plusieurs notes consécutives seraient à @qq{sauter},
vous pouvez faire appel à la fonction @code{\repeat unfold} :

@lilypond[verbatim,ragged-right,quote]
\relative c' { c c g' g }
\addlyrics {
  twin -- \skip 4 \skip 4
  kle
}
\addlyrics {
  twin -- \repeat unfold 2 { \skip 4 }
  kle
}
@end lilypond


@node Traits d'union et de prolongation
@unnumberedsubsubsec Traits d'union et de prolongation
@translationof Extenders and hyphens

@cindex mélisme
@cindex extenseur
@cindex prolongateur

@c leave this as samp. -gp
Un mélisme est indiqué par une longue ligne horizontale basse centrée
entre une syllabe et la suivante.  Une telle ligne, que nous
appellerons prolongateur ou extenseur, s'obtient en saisissant
@samp{ __ } (notez les espaces entourant le souligné double).

@warning{Dans une partition, les mélismes, ou vocalises, sont
matérialisés par une ligne de prolongation.  On l'indique par un double
caractère souligné.  Lorsqu'ils sont assez courts, ces mélismes peuvent
s'indiquer par un souligné unique, ce qui aura pour effet de sauter une
note à chaque fois et de ne pas imprimer de ligne.}

@cindex trait d'union

@c leave this as samp. -gp
Un trait d'union séparant deux syllabes d'un même mot s'obtient en
saisissant @samp{ -- } (notez les espaces entourant le tiret double).
Ce trait d'union sera centré entre les deux syllabes et sa longueur
sera proportionnelle à l'espace les séparant.

Dans les partitions très serrées, les traits d'union peuvent ne pas être
imprimés.  Cet inconvénient peut être contrôlé par
@code{minimum-distance} pour gérer l'espace minimum entre deux syllabes,
et @code{minimum-length}, seuil en deçà duquel il n'y a pas de trait
d'union.


@seealso
Référence des propriétés internes :
@rinternals{LyricExtender},
@rinternals{LyricHyphen}


@node Paroles et reprises
@unnumberedsubsubsec Paroles et reprises
@translationof Lyrics and repeats

@c TODO New section.  Add text
@i{En cours de rédaction.}


@node Situations particulères en matière de paroles
@subsection Situations particulères en matière de paroles
@translationof Specific uses of lyrics

@c FIXME This whole section is to be reorganized. -vv

Une même mélodie peut se voir traitée différemment suivant les couplets.
La commande @code{\lyricsto} permet de prendre en compte ces variantes.

@menu
* Paroles alternatives::
* Paroles indépendantes des notes::
* Espacement des syllabes::
* Centrage des paroles entre les portées::
@end menu

@node Paroles alternatives
@unnumberedsubsubsec Paroles alternatives
@translationof Divisi lyrics

En donnant un nom à chaque voix et en leur attribuant spécifiquement
des paroles, on peut créer des paroles alternatives -- également
qualifiées de @emph{divisi}.

@lilypond[verbatim,ragged-right,quote]
\score{ <<
  \new Voice = "melody" {
    \relative c' {
      c4
      <<
        { \voiceOne c8 e }
        \new Voice = "splitpart" { \voiceTwo c4 }
      >>
      \oneVoice c4 c | c
    }
  }
  \new Lyrics \lyricsto "melody" { we shall not o- ver- come }
  \new Lyrics \lyricsto "splitpart" { will }
>> }
@end lilypond


Cette astuce permet de faire varier les paroles lorsqu'un fragment est
repris.

@lilypond[verbatim,ragged-right,quote]
\score{ <<
  \new Voice = "melody" \relative c' {
    c2 e | g e | c1 |
    \new Voice = "verse" \repeat volta 2 {c4 d e f | g1 | }
    a2 b | c1}
  \new Lyrics = "mainlyrics" \lyricsto melody \lyricmode {
    do mi sol mi do
    la si do }
  \context Lyrics = "mainlyrics" \lyricsto verse \lyricmode {
   do re mi fa sol }
  \new Lyrics = "repeatlyrics" \lyricsto verse \lyricmode {
   dodo rere mimi fafa solsol }
>>
}
@end lilypond

@node Paroles indépendantes des notes
@unnumberedsubsubsec Paroles indépendantes des notes
@translationof Lyrics independent of notes

@cindex Devnull, contexte

Dans certaines musiques vocales assez complexes, on peut avoir intérêt à
imprimer les paroles indépendamment des notes.  La mélodie sur laquelle
s'aligne les paroles -- marquée par le @emph{tag} @code{lyricrhythm}
dans l'exemple suivant -- peut être insérée dans un contexte
@code{Devnull}, ce qui indique à LilyPond de ne pas imprimer cette
mélodie dans la partition.  Seules subsistent alors de cette mélodie les
valeurs rythmiques, sur lesquelles s'alignent les paroles.

@lilypond[quote,verbatim,ragged-right]
voice = {
  c''2
  \tag #'music { c''2 }
  \tag #'lyricrhythm { c''4. c''8 }
  d''1
}

lyr = \lyricmode { I like my cat! }

<<
  \new Staff \keepWithTag #'music \voice
  \new Devnull="nowhere" \keepWithTag #'lyricrhythm \voice
  \new Lyrics \lyricsto "nowhere" \lyr
  \new Staff { c'8 c' c' c' c' c' c' c'
  c' c' c' c' c' c' c' c' }
>>
@end lilypond

Cette méthode est inapropriée dès lors que la musique contenue dans le
contexte @code{Devnull} comporte des mélismes.  En effet, les mélismes
sont définis par le contexte @code{Voice}.  Connecter des paroles à un
contexte @code{Devnull} rend les liens voix-syllabe inopérants, et par
voie de conséquence fait disparaître les informations de mélisme.

@c Conclusion: do not use devnull for lyrics -FV

@c this clarifies http://code.google.com/p/lilypond/issues/detail?id=248


@node Espacement des syllabes
@unnumberedsubsubsec Espacement des syllabes
@translationof Spacing out syllables

@cindex espacement des paroles
@cindex paroles, gestion de l'espacement

La propriété @code{#'minimum-distance} de l'objet @code{LyricSpace}
permet d'accroître l'espacement des paroles.

@lilypond[relative,verbatim,fragment,quote,ragged-right]
{
  c c c c
  \override Lyrics.LyricSpace #'minimum-distance = #1.0
  c c c c
}
\addlyrics {
  longtext longtext longtext longtext
  longtext longtext longtext longtext
}
@end lilypond

@noindent
Pour que ce réglage s'applique à toute la partition, définissez-le
dans le bloc @code{\layout}.

@lilypond[verbatim,quote,ragged-right]
\score {
  \relative c' {
  c c c c
  c c c c
  }
  \addlyrics {
  longtext longtext longtext longtext
  longtext longtext longtext longtext
  }
  \layout {
    \context {
      \Lyrics
      \override LyricSpace #'minimum-distance = #1.0
    }
  }
}
@end lilypond

@c @snippets
@c This snippet has been renamed to "lyrics-alignment.ly"
@c update as soon as lsr/is updated -vv
@c @lilypondfile[verbatim,lilyquote,ragged-right,texidoc,doctitle]
@c {lyrics-alignment.ly}

@c TODO: move to LSR -vv
@snippets

L'assurance que tous les scripts textuels et les paroles resteront bien
à l'intérieur des marges requiert des ressources non négligeables.
Afin de réduire le temps de traitement, LilyPond n'effectue pas ces
calculs par défaut ; pour l'y obliger, vous devrez ajouter

@example
\override Score.PaperColumn #'keep-inside-line = ##t
@end example

Pour s'assurer que les paroles ne seront pas traversées par des barres
de mesure, il faut ajouter

@example
\layout @{
  \context @{
    \Lyrics
      \consists "Bar_engraver"
      \consists "Separating_line_group_engraver"
      \override BarLine #'transparent = ##t
  @}
@}
@end example

@c TODO Create and add lsr example of lyricMelismaAlignment
@c It's used like this to center-align all lyric syllables,
@c even when notes are tied. -td

@ignore
\layout
{
     \context { \Score lyricMelismaAlignment = #0 }
}
@end ignore


@node Centrage des paroles entre les portées
@unnumberedsubsubsec Centrage des paroles entre les portées
@translationof Centering lyrics between staves

@c TODO Add text from -user
@i{En cours de rédaction.}


@node Couplets
@subsection Couplets
@translationof Stanzas

@menu
* Numérotation des couplets::
* Indication de nuance dans les couplets::
* Indication du personnage et couplets::
* Rythme différent selon le couplet::
* Paroles en fin de partition::
* Paroles sur plusieurs colonnes en fin de partition::
@end menu


@node Numérotation des couplets
@unnumberedsubsubsec Numérotation des couplets
@translationof Adding stanza numbers

@cindex numéro de couplet

On peut ajouter un numéro aux couplets en définissant la variable
@code{stanza} :

@lilypond[quote,ragged-right,verbatim,relative=2,fragment]
\new Voice {
  \time 3/4 g2 e4 a2 f4 g2.
} \addlyrics {
  \set stanza = #"1. "
  Hi, my name is Bert.
} \addlyrics {
  \set stanza = #"2. "
  Oh, ché -- ri, je t'aime
}
@end lilypond

@noindent
Ces numéros se placeront juste avant le début de la première syllabe.

@c TODO Create and add snippet to show how two lines of a
@c stanza can be grouped together, along these lines:
@c (might need improving a bit) -td

@ignore
leftbrace = \markup { \override #'(font-encoding . fetaBraces) \lookup
#"brace105" }

stanzaOneOne = {
  \set stanza = \markup { "1. " \leftbrace }
  \lyricmode { Child, you're mine and I love you.
    Lend thine ear to what I say.

  }
}

stanzaOneThree =  {
%  \set stanza = \markup { "   "}
  \lyricmode { Child, I have no great -- er joy
    Than to have you walk in truth.

  }
}

\new Voice {
  \repeat volta 2 { c'8 c' c' c' c' c' c'4
                    c'8 c' c' c' c' c' c'4   }
}  \addlyrics { \stanzaOneOne }
   \addlyrics { \stanzaOneThree }

@end ignore


@node Indication de nuance dans les couplets
@unnumberedsubsubsec Indication de nuance dans les couplets
@translationof Adding dynamics marks to stanzas

Lorsque des couplets ont des nuances différentes, vous pouvez ajouter
une nuance devant chacun d'eux.  L'objet @code{StanzaNumber} contient
tout ce qui se place au début du couplet.  Pour des raisons techniques,
vous devrez définir la variable @code{stanza} en dehors du mode
@code{\lyricmode}.

@lilypond[quote,ragged-right,verbatim]
text = {
  \set stanza = \markup { \dynamic "ff" "1. " }
  \lyricmode {
    Big bang
  }
}

<<
  \new Voice = "tune" {
    \time 3/4
    g'4 c'2
  }
\new Lyrics \lyricsto "tune" \text
>>
@end lilypond

@node Indication du personnage et couplets
@unnumberedsubsubsec Indication du personnage et couplets
@translationof Adding singers' names to stanzas

@cindex nom de personnage
@cindex nom du chanteur

On peut également ajouter le nom de chaque rôle ; ils s'imprimeront au
début de chaque ligne comme les noms d'instrument.  Il faut pour cela
définir @code{vocalName}, et @code{shortVocalName} pour une version
abrégée.

@lilypond[fragment,ragged-right,quote,verbatim,relative=2]
\new Voice {
  \time 3/4 g2 e4 a2 f4 g2.
} \addlyrics {
  \set vocalName = #"Bert "
  Hi, my name is Bert.
} \addlyrics {
  \set vocalName = #"Ernie "
  Oh, ché -- ri, je t'aime
}
@end lilypond

@node Rythme différent selon le couplet
@unnumberedsubsubsec Rythme différent selon le couplet
@translationof Stanzas with different rhythms

@subsubheading Mélismes dans certaines strophes seulement

Il peut survenir que les paroles comportent un mélisme pour l'un des
couplets, mais plusieurs syllabes pour d'autres.  Une solution consiste
à ignorer temporairement les mélismes dans le couplet ayant le plus de
syllabes.  Il suffit pour cela de définir la propriété
@code{ignoreMelismata} à l'intérieur du contexte Lyrics.

Petit détail qui a son importance : l'activation de
@code{ignoreMelismata} doit @strong{précéder} la syllabe à partir de
laquelle elle s'appliquera :

@lilypond[verbatim,ragged-right,quote]
<<
  \relative c' \new Voice = "lahlah" {
    \set Staff.autoBeaming = ##f
    c4
    \slurDotted
    f8.[( g16])
    a4
  }
  \new Lyrics \lyricsto "lahlah" {
    more slow -- ly
  }
  \new Lyrics \lyricsto "lahlah" {
    go
    \set ignoreMelismata = ##t
    fas -- ter
    \unset ignoreMelismata
    still
  }
>>
@end lilypond

@knownissues
Contrairement aux autres utilisations de l'instruction @code{\set}, il
n'est pas possible de la faire précéder d'un @code{\once} dans le cas de
@code{\set@tie{}ignoreMelismata}.  Les paroles affectées par la propriété
@code{ignoreMelismata} @strong{doivent} être encadrées respectivement
d'un @code{\set} et d'un @code{\unset}.

@subsubheading Basculer vers une mélodie alternative

On peut créer des variations plus complexes à partir d'une mélodie à
plusieurs voix.  Les paroles peuvent suivre l'une ou l'autre des
lignes mélodiques, et même basculer de l'une à l'autre si l'on
modifie la propriété @code{associatedVoice}.  Dans cet exemple,

@lilypond[ragged-right,quote]
<<
  \relative c' \new Voice = "lahlah" {
    \set Staff.autoBeaming = ##f
    c4
    <<
      \new Voice = "alternative" {
        \voiceOne
        \times 2/3 {
          % show associations clearly.
          \override NoteColumn #'force-hshift = #-3
          f8 f g
        }
      }
      {
        \voiceTwo
        f8.[ g16]
        \oneVoice
      } >>
    a8( b) c
  }
  \new Lyrics \lyricsto "lahlah" {
    Ju -- ras -- sic Park
  }
  \new Lyrics \lyricsto "lahlah" {
    % Tricky: need to set associatedVoice
    % one syllable too soon!
    \set associatedVoice = alternative % applies to "ran"
    Ty --
    ran --
    no --
    \set associatedVoice = lahlah % applies to "rus"
    sau -- rus Rex
  } >>
@end lilypond

@noindent
le texte du premier couplet s'aligne sur la mélodie nommée
@qq{lahlah},

@example
\new Lyrics \lyricsto "lahlah" @{
  Ju -- ras -- sic Park
@}
@end example


Le second couplet est tout d'abord rattaché au contexte @code{lahlah},
mais bascule sur une autre mélodie sur la syllabe @qq{ran}.  Pour cela,
nous utilisons
@example
\set associatedVoice = alternative
@end example

@noindent
où @code{alternative} désigne le nom du contexte @code{Voice} qui contient
le triolet.

Encore une fois, cette commande doit être spécifiée une syllabe en
avance, c'est-à-dire ici avant la syllabe @qq{Ty}.

@example
\new Lyrics \lyricsto "lahlah" @{
  \set associatedVoice = alternative % s'applique à "ran"
  Ty --
  ran --
  no --
  \set associatedVoice = lahlah % s'applique à "rus"
  sau -- rus Rex
@}
@end example

@noindent
Comme vous pouvez le voir, nous revenons ensuite à l'alignement sur la
mélodie d'origine, en assignant à la propriété @code{associatedVoice}
la valeur @code{lahlah}.


@node Paroles en fin de partition
@unnumberedsubsubsec Paroles en fin de partition
@translationof Printing stanzas at the end

Il peut parfois s'avérer opportun d'aligner un seul couplet sur la
mélodie, et de présenter tous les autres en bloc à la fin du morceau.
Ces couplets additionnels peuvent être inclus dans une section
@code{\markup} en dehors du bloc @code{\score} principal.
Vous en trouverez un exemple ci-dessous ; notez également les deux
méthodes différentes employées pour indiquer les sauts de ligne,
entre les couplets (@emph{verses} en anglais) 2 et 3.

@c KEEPLY
@lilypond[ragged-right,verbatim,quote]
melody = \relative c'' {
  \time 2/4
  g4 g8 b | b a b a |
  g4 g8 b | b a b4 |
}

text = \lyricmode {
\set stanza = #"1." À la clai- re fon- tai- ne,
M'en al- lant pro- me- ner...
}

\score{ <<
  \new Voice = "one" { \melody }
  \new Lyrics \lyricsto "one" \text
>>
  \layout { }
}
\markup { \column{
  \line{ Verse 2. }
  \line{ Sous les feuilles d'un chêne }
  \line{ Je me suis fait sécher... }
  }
}
\markup{
  \wordwrap-string #"
  Verse 3.

  Chante, rossignol, chante,

  Toi qui as le coeur gai..."
}
@end lilypond

@node Paroles sur plusieurs colonnes en fin de partition
@unnumberedsubsubsec Paroles sur plusieurs colonnes en fin de partition
@translationof Printing stanzas at the end in multiple columns

Si les couplets sont vraiment nombreux, il est possible de les imprimer
sur plusieurs colonnes.  L'exemple suivant vous montre comment procéder
pour que le numéro du couplet soit en retrait à gauche, comme c'est
traditionnellement le cas. 

@c KEEPLY
@lilypond[ragged-right,quote,verbatim]
melody = \relative c'' {
  \time 2/4
  g4 g8 b | b a b a |
  g4 g8 b | b a b4 |
}

text = \lyricmode {
  \set stanza = #"1." À la clai- re fon- tai- ne,
  M'en al- lant pro- me- ner...
}

\score{ <<
    \new Voice = "one" { \melody }
    \new Lyrics \lyricsto "one" \text
   >>
  \layout { }
}

\markup {
  \fill-line {
    \hspace #0.1 % décalage par rapport à la marge de gauche
        % peut être supprimé si l'espace sur la page est réduit
     \column {
      \line { \bold "2."
        \column {
          "Sous les feuilles d'un chêne"
          "Je me suis fait sécher..."
        }
      }
      \hspace #0.1 % ajout d'espace vertical entre les couplets
      \line { \bold "3."
        \column {
          "Chante, rossignol, chante,"
          "Toi qui as le coeur gai..."
        }
      }
    }
    \hspace #0.1  % ajout d'espace horizontal entre les colonnes
        % si elles sont toujours trop proches, ajouter d'autres paires de " "
        % jusqu'à ce que le résultat soit acceptable.
     \column {
      \line { \bold "4."
        \column {
          "J'ai perdu mon ami"
          "Sans l'avoir mérité..."
        }
      }
      \hspace #0.1 % ajout d'espace vertical entre les couplets
      \line { \bold "5."
        \column {
          "Je voudrais que la rose"
          "Fût encore au rosier..."
        }
      }
    }
  \hspace #0.1 % décalage par rapport à la marge de droite
      % peut être supprimé si l'espace sur la page est réduit
  }
}
@end lilypond


@seealso
Référence des propriétés internes :
@rinternals{LyricText},
@rinternals{StanzaNumber}.

